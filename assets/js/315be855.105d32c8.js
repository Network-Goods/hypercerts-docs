"use strict";(self.webpackChunkhypercerts_docs=self.webpackChunkhypercerts_docs||[]).push([[246],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=u(a),k=r,c=m["".concat(s,".").concat(k)]||m[k]||p[k]||l;return a?n.createElement(c,i(i({ref:t},d),{},{components:a})):n.createElement(c,i({ref:t},d))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},834:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const l={},i="Solidity API",o={unversionedId:"contracts/index",id:"contracts/index",title:"Solidity API",description:"SlotAlreadyMinted",source:"@site/docs/contracts/index.md",sourceDirName:"contracts",slug:"/contracts/",permalink:"/hypercerts-docs/contracts/",draft:!1,editUrl:"https://github.com/Network-Goods/hypercerts-docs/docs/contracts/index.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Glossary",permalink:"/hypercerts-docs/glossary"}},s={},u=[{value:"SlotAlreadyMinted",id:"slotalreadyminted",level:2},{value:"SlotOutOfBounds",id:"slotoutofbounds",level:2},{value:"SlotTokenOutOfBounds",id:"slottokenoutofbounds",level:2},{value:"ERC3525SlotEnumerableUpgradeable",id:"erc3525slotenumerableupgradeable",level:2},{value:"SlotData",id:"slotdata",level:3},{value:"_slotTokensIndex",id:"_slottokensindex",level:3},{value:"_allSlots",id:"_allslots",level:3},{value:"_allSlotsIndex",id:"_allslotsindex",level:3},{value:"constructor",id:"constructor",level:3},{value:"__ERC3525SlotEnumerableUpgradeable_init",id:"__erc3525slotenumerableupgradeable_init",level:3},{value:"supportsInterface",id:"supportsinterface",level:3},{value:"slotCount",id:"slotcount",level:3},{value:"slotByIndex",id:"slotbyindex",level:3},{value:"_slotExists",id:"_slotexists",level:3},{value:"tokenSupplyInSlot",id:"tokensupplyinslot",level:3},{value:"tokenInSlotByIndex",id:"tokeninslotbyindex",level:3},{value:"_tokenExistsInSlot",id:"_tokenexistsinslot",level:3},{value:"_createSlot",id:"_createslot",level:3},{value:"_beforeValueTransfer",id:"_beforevaluetransfer",level:3},{value:"_afterValueTransfer",id:"_aftervaluetransfer",level:3},{value:"_addSlotToAllSlotsEnumeration",id:"_addslottoallslotsenumeration",level:3},{value:"_addTokenToSlotEnumeration",id:"_addtokentoslotenumeration",level:3},{value:"_removeTokenFromSlotEnumeration",id:"_removetokenfromslotenumeration",level:3},{value:"__gap",id:"__gap",level:3},{value:"NonExistentToken",id:"nonexistenttoken",level:2},{value:"NonExistentSlot",id:"nonexistentslot",level:2},{value:"InsufficientBalance",id:"insufficientbalance",level:2},{value:"InsufficientAllowance",id:"insufficientallowance",level:2},{value:"ToZeroAddress",id:"tozeroaddress",level:2},{value:"InvalidID",id:"invalidid",level:2},{value:"AlreadyMinted",id:"alreadyminted",level:2},{value:"SlotsMismatch",id:"slotsmismatch",level:2},{value:"InvalidApproval",id:"invalidapproval",level:2},{value:"NotApprovedOrOwner",id:"notapprovedorowner",level:2},{value:"NotERC3525Receiver",id:"noterc3525receiver",level:2},{value:"NotERC721Receiver",id:"noterc721receiver",level:2},{value:"FromIncorrectOwner",id:"fromincorrectowner",level:2},{value:"ERC3525Upgradeable",id:"erc3525upgradeable",level:2},{value:"TokenData",id:"tokendata",level:3},{value:"AddressData",id:"addressdata",level:3},{value:"_name",id:"_name",level:3},{value:"_symbol",id:"_symbol",level:3},{value:"_decimals",id:"_decimals",level:3},{value:"_approvedValues",id:"_approvedvalues",level:3},{value:"_allTokens",id:"_alltokens",level:3},{value:"_allTokensIndex",id:"_alltokensindex",level:3},{value:"_addressData",id:"_addressdata",level:3},{value:"tokenCounter",id:"tokencounter",level:3},{value:"supportsInterface",id:"supportsinterface-1",level:3},{value:"constructor",id:"constructor-1",level:3},{value:"__ERC3525Upgradeable_init",id:"__erc3525upgradeable_init",level:3},{value:"name",id:"name",level:3},{value:"symbol",id:"symbol",level:3},{value:"valueDecimals",id:"valuedecimals",level:3},{value:"balanceOf",id:"balanceof",level:3},{value:"balanceOf",id:"balanceof-1",level:3},{value:"ownerOf",id:"ownerof",level:3},{value:"slotOf",id:"slotof",level:3},{value:"allowance",id:"allowance",level:3},{value:"totalSupply",id:"totalsupply",level:3},{value:"tokenByIndex",id:"tokenbyindex",level:3},{value:"tokenOfOwnerByIndex",id:"tokenofownerbyindex",level:3},{value:"_isApprovedOrOwner",id:"_isapprovedorowner",level:3},{value:"_exists",id:"_exists",level:3},{value:"approve",id:"approve",level:3},{value:"approve",id:"approve-1",level:3},{value:"getApproved",id:"getapproved",level:3},{value:"setApprovalForAll",id:"setapprovalforall",level:3},{value:"isApprovedForAll",id:"isapprovedforall",level:3},{value:"transferFrom",id:"transferfrom",level:3},{value:"transferFrom",id:"transferfrom-1",level:3},{value:"transferFrom",id:"transferfrom-2",level:3},{value:"safeTransferFrom",id:"safetransferfrom",level:3},{value:"safeTransferFrom",id:"safetransferfrom-1",level:3},{value:"contractURI",id:"contracturi",level:3},{value:"tokenURI",id:"tokenuri",level:3},{value:"slotURI",id:"sloturi",level:3},{value:"_mint",id:"_mint",level:3},{value:"_mintValue",id:"_mintvalue",level:3},{value:"_splitValue",id:"_splitvalue",level:3},{value:"_mergeValue",id:"_mergevalue",level:3},{value:"_burn",id:"_burn",level:3},{value:"_approve",id:"_approve",level:3},{value:"_approveValue",id:"_approvevalue",level:3},{value:"_spendAllowance",id:"_spendallowance",level:3},{value:"_clearApprovedValues",id:"_clearapprovedvalues",level:3},{value:"_existApproveValue",id:"_existapprovevalue",level:3},{value:"_setApprovalForAll",id:"_setapprovalforall",level:3},{value:"_transferValue",id:"_transfervalue",level:3},{value:"_transferTokenId",id:"_transfertokenid",level:3},{value:"_safeTransferTokenId",id:"_safetransfertokenid",level:3},{value:"_beforeValueTransfer",id:"_beforevaluetransfer-1",level:3},{value:"_afterValueTransfer",id:"_aftervaluetransfer-1",level:3},{value:"_checkOnERC3525Received",id:"_checkonerc3525received",level:3},{value:"_checkOnERC721Received",id:"_checkonerc721received",level:3},{value:"_createOriginalTokenId",id:"_createoriginaltokenid",level:3},{value:"_addTokenToOwnerEnumeration",id:"_addtokentoownerenumeration",level:3},{value:"_removeTokenFromOwnerEnumeration",id:"_removetokenfromownerenumeration",level:3},{value:"_addTokenToAllTokensEnumeration",id:"_addtokentoalltokensenumeration",level:3},{value:"_removeTokenFromAllTokensEnumeration",id:"_removetokenfromalltokensenumeration",level:3},{value:"_msgSender",id:"_msgsender",level:3},{value:"checkTokenExists",id:"checktokenexists",level:3},{value:"IHyperCertMinter",id:"ihypercertminter",level:2},{value:"Claim",id:"claim",level:3},{value:"workScopes",id:"workscopes",level:3},{value:"impactScopes",id:"impactscopes",level:3},{value:"rights",id:"rights",level:3},{value:"getImpactCert",id:"getimpactcert",level:3},{value:"balanceOf",id:"balanceof-2",level:3},{value:"IHyperCertSVG",id:"ihypercertsvg",level:2},{value:"generateSvgHyperCert",id:"generatesvghypercert",level:3},{value:"generateSvgFraction",id:"generatesvgfraction",level:3},{value:"HyperCertMetadata",id:"hypercertmetadata",level:2},{value:"UPGRADER_ROLE",id:"upgrader_role",level:3},{value:"_version",id:"_version",level:3},{value:"_svgGenerator",id:"_svggenerator",level:3},{value:"constructor",id:"constructor-2",level:3},{value:"initialize",id:"initialize",level:3},{value:"generateContractURI",id:"generatecontracturi",level:3},{value:"generateTokenURI",id:"generatetokenuri",level:3},{value:"generateSlotURI",id:"generatesloturi",level:3},{value:"_hyperCertDimensions",id:"_hypercertdimensions",level:3},{value:"_generateImageStringFraction",id:"_generateimagestringfraction",level:3},{value:"_generateImageStringHypercert",id:"_generateimagestringhypercert",level:3},{value:"_propertyString",id:"_propertystring",level:3},{value:"_propertyString",id:"_propertystring-1",level:3},{value:"_propertyStringCSV",id:"_propertystringcsv",level:3},{value:"_propertyStringRange",id:"_propertystringrange",level:3},{value:"_propertyString",id:"_propertystring-2",level:3},{value:"_propertyString",id:"_propertystring-3",level:3},{value:"_propertyString",id:"_propertystring-4",level:3},{value:"_propertyString",id:"_propertystring-5",level:3},{value:"_mapWorkScopesIdsToValues",id:"_mapworkscopesidstovalues",level:3},{value:"_mapImpactScopesIdsToValues",id:"_mapimpactscopesidstovalues",level:3},{value:"_mapRightsIdsToValues",id:"_maprightsidstovalues",level:3},{value:"version",id:"version",level:3},{value:"updateVersion",id:"updateversion",level:3},{value:"supportsInterface",id:"supportsinterface-2",level:3},{value:"_authorizeUpgrade",id:"_authorizeupgrade",level:3},{value:"EmptyInput",id:"emptyinput",level:2},{value:"DuplicateScope",id:"duplicatescope",level:2},{value:"InvalidScope",id:"invalidscope",level:2},{value:"InvalidTimeframe",id:"invalidtimeframe",level:2},{value:"ConflictingClaim",id:"conflictingclaim",level:2},{value:"InvalidInput",id:"invalidinput",level:2},{value:"HyperCertMinter",id:"hypercertminter",level:2},{value:"UPGRADER_ROLE",id:"upgrader_role-1",level:3},{value:"_metadata",id:"_metadata",level:3},{value:"workScopes",id:"workscopes-1",level:3},{value:"impactScopes",id:"impactscopes-1",level:3},{value:"rights",id:"rights-1",level:3},{value:"_contributorImpacts",id:"_contributorimpacts",level:3},{value:"_hyperCerts",id:"_hypercerts",level:3},{value:"Claim",id:"claim-1",level:3},{value:"ImpactClaimed",id:"impactclaimed",level:3},{value:"ImpactScopeAdded",id:"impactscopeadded",level:3},{value:"RightAdded",id:"rightadded",level:3},{value:"WorkScopeAdded",id:"workscopeadded",level:3},{value:"constructor",id:"constructor-3",level:3},{value:"initialize",id:"initialize-1",level:3},{value:"supportsInterface",id:"supportsinterface-3",level:3},{value:"addImpactScope",id:"addimpactscope",level:3},{value:"addRight",id:"addright",level:3},{value:"addWorkScope",id:"addworkscope",level:3},{value:"mint",id:"mint",level:3},{value:"split",id:"split",level:3},{value:"merge",id:"merge",level:3},{value:"getImpactCert",id:"getimpactcert-1",level:3},{value:"slotURI",id:"sloturi-1",level:3},{value:"tokenURI",id:"tokenuri-1",level:3},{value:"contractURI",id:"contracturi-1",level:3},{value:"burn",id:"burn",level:3},{value:"donate",id:"donate",level:3},{value:"_authorizeUpgrade",id:"_authorizeupgrade-1",level:3},{value:"_authorizeAdd",id:"_authorizeadd",level:3},{value:"_authorizeMint",id:"_authorizemint",level:3},{value:"_parseData",id:"_parsedata",level:3},{value:"_msgSender",id:"_msgsender-1",level:3},{value:"setMetadataGenerator",id:"setmetadatagenerator",level:3},{value:"HyperCertSVG",id:"hypercertsvg",level:2},{value:"UPGRADER_ROLE",id:"upgrader_role-2",level:3},{value:"_version",id:"_version-1",level:3},{value:"backgrounds",id:"backgrounds",level:3},{value:"colors",id:"colors",level:3},{value:"backgroundCounter",id:"backgroundcounter",level:3},{value:"colorsCounter",id:"colorscounter",level:3},{value:"SVGParams",id:"svgparams",level:3},{value:"SVGColors",id:"svgcolors",level:3},{value:"BackgroundAdded",id:"backgroundadded",level:3},{value:"ColorsAdded",id:"colorsadded",level:3},{value:"constructor",id:"constructor-4",level:3},{value:"initialize",id:"initialize-2",level:3},{value:"addBackground",id:"addbackground",level:3},{value:"addColors",id:"addcolors",level:3},{value:"generateSvgHyperCert",id:"generatesvghypercert-1",level:3},{value:"generateSvgFraction",id:"generatesvgfraction-1",level:3},{value:"_generateHyperCert",id:"_generatehypercert",level:3},{value:"_generateHyperCertFraction",id:"_generatehypercertfraction",level:3},{value:"_generateBackgroundPattern",id:"_generatebackgroundpattern",level:3},{value:"_generateColors",id:"_generatecolors",level:3},{value:"_getBackgroundIndex",id:"_getbackgroundindex",level:3},{value:"_getColorIndex",id:"_getcolorindex",level:3},{value:"_generateHeader",id:"_generateheader",level:3},{value:"_generateScopeOfImpact",id:"_generatescopeofimpact",level:3},{value:"_generateName",id:"_generatename",level:3},{value:"_generateWorkperiod",id:"_generateworkperiod",level:3},{value:"_generateDivider",id:"_generatedivider",level:3},{value:"_generateFraction",id:"_generatefraction",level:3},{value:"stringToBytes32",id:"stringtobytes32",level:3},{value:"bytes32ToString",id:"bytes32tostring",level:3},{value:"cutString",id:"cutstring",level:3},{value:"getPercent",id:"getpercent",level:3},{value:"uint2decimal",id:"uint2decimal",level:3},{value:"supportsInterface",id:"supportsinterface-4",level:3},{value:"_authorizeUpgrade",id:"_authorizeupgrade-2",level:3},{value:"IERC3525MetadataUpgradeable",id:"ierc3525metadataupgradeable",level:2},{value:"contractURI",id:"contracturi-2",level:3},{value:"slotURI",id:"sloturi-2",level:3},{value:"IERC3525Receiver",id:"ierc3525receiver",level:2},{value:"onERC3525Received",id:"onerc3525received",level:3},{value:"IERC3525SlotApprovableUpgradeable",id:"ierc3525slotapprovableupgradeable",level:2},{value:"ApprovalForSlot",id:"approvalforslot",level:3},{value:"setApprovalForSlot",id:"setapprovalforslot",level:3},{value:"isApprovedForSlot",id:"isapprovedforslot",level:3},{value:"IERC3525SlotEnumerableUpgradeable",id:"ierc3525slotenumerableupgradeable",level:2},{value:"slotCount",id:"slotcount-1",level:3},{value:"slotByIndex",id:"slotbyindex-1",level:3},{value:"tokenSupplyInSlot",id:"tokensupplyinslot-1",level:3},{value:"tokenInSlotByIndex",id:"tokeninslotbyindex-1",level:3},{value:"IERC3525Upgradeable",id:"ierc3525upgradeable",level:2},{value:"TransferValue",id:"transfervalue",level:3},{value:"ApprovalValue",id:"approvalvalue",level:3},{value:"SlotChanged",id:"slotchanged",level:3},{value:"valueDecimals",id:"valuedecimals-1",level:3},{value:"balanceOf",id:"balanceof-3",level:3},{value:"slotOf",id:"slotof-1",level:3},{value:"approve",id:"approve-2",level:3},{value:"allowance",id:"allowance-1",level:3},{value:"transferFrom",id:"transferfrom-3",level:3},{value:"transferFrom",id:"transferfrom-4",level:3},{value:"IHyperCertMetadata",id:"ihypercertmetadata",level:2},{value:"generateContractURI",id:"generatecontracturi-1",level:3},{value:"generateSlotURI",id:"generatesloturi-1",level:3},{value:"generateTokenURI",id:"generatetokenuri-1",level:3},{value:"DateTime",id:"datetime",level:2},{value:"SECONDS_PER_DAY",id:"seconds_per_day",level:3},{value:"SECONDS_PER_HOUR",id:"seconds_per_hour",level:3},{value:"SECONDS_PER_MINUTE",id:"seconds_per_minute",level:3},{value:"OFFSET19700101",id:"offset19700101",level:3},{value:"DOW_MON",id:"dow_mon",level:3},{value:"DOW_TUE",id:"dow_tue",level:3},{value:"DOW_WED",id:"dow_wed",level:3},{value:"DOW_THU",id:"dow_thu",level:3},{value:"DOW_FRI",id:"dow_fri",level:3},{value:"DOW_SAT",id:"dow_sat",level:3},{value:"DOW_SUN",id:"dow_sun",level:3},{value:"_daysFromDate",id:"_daysfromdate",level:3},{value:"_daysToDate",id:"_daystodate",level:3},{value:"timestampFromDate",id:"timestampfromdate",level:3},{value:"timestampFromDateTime",id:"timestampfromdatetime",level:3},{value:"timestampToDate",id:"timestamptodate",level:3},{value:"timestampToDateTime",id:"timestamptodatetime",level:3},{value:"isValidDate",id:"isvaliddate",level:3},{value:"isValidDateTime",id:"isvaliddatetime",level:3},{value:"isLeapYear",id:"isleapyear",level:3},{value:"_isLeapYear",id:"_isleapyear",level:3},{value:"isWeekDay",id:"isweekday",level:3},{value:"isWeekEnd",id:"isweekend",level:3},{value:"getDaysInMonth",id:"getdaysinmonth",level:3},{value:"_getDaysInMonth",id:"_getdaysinmonth",level:3},{value:"getDayOfWeek",id:"getdayofweek",level:3},{value:"getYear",id:"getyear",level:3},{value:"getMonth",id:"getmonth",level:3},{value:"getDay",id:"getday",level:3},{value:"getHour",id:"gethour",level:3},{value:"getMinute",id:"getminute",level:3},{value:"getSecond",id:"getsecond",level:3},{value:"addYears",id:"addyears",level:3},{value:"addMonths",id:"addmonths",level:3},{value:"addDays",id:"adddays",level:3},{value:"addHours",id:"addhours",level:3},{value:"addMinutes",id:"addminutes",level:3},{value:"addSeconds",id:"addseconds",level:3},{value:"subYears",id:"subyears",level:3},{value:"subMonths",id:"submonths",level:3},{value:"subDays",id:"subdays",level:3},{value:"subHours",id:"subhours",level:3},{value:"subMinutes",id:"subminutes",level:3},{value:"subSeconds",id:"subseconds",level:3},{value:"diffYears",id:"diffyears",level:3},{value:"diffMonths",id:"diffmonths",level:3},{value:"diffDays",id:"diffdays",level:3},{value:"diffHours",id:"diffhours",level:3},{value:"diffMinutes",id:"diffminutes",level:3},{value:"diffSeconds",id:"diffseconds",level:3},{value:"strings",id:"strings",level:2},{value:"slice",id:"slice",level:3},{value:"memcpy",id:"memcpy",level:3},{value:"toSlice",id:"toslice",level:3},{value:"len",id:"len",level:3},{value:"toSliceB32",id:"tosliceb32",level:3},{value:"copy",id:"copy",level:3},{value:"toString",id:"tostring",level:3},{value:"len",id:"len-1",level:3},{value:"empty",id:"empty",level:3},{value:"compare",id:"compare",level:3},{value:"equals",id:"equals",level:3},{value:"nextRune",id:"nextrune",level:3},{value:"nextRune",id:"nextrune-1",level:3},{value:"ord",id:"ord",level:3},{value:"keccak",id:"keccak",level:3},{value:"startsWith",id:"startswith",level:3},{value:"beyond",id:"beyond",level:3},{value:"endsWith",id:"endswith",level:3},{value:"until",id:"until",level:3},{value:"findPtr",id:"findptr",level:3},{value:"rfindPtr",id:"rfindptr",level:3},{value:"find",id:"find",level:3},{value:"rfind",id:"rfind",level:3},{value:"split",id:"split-1",level:3},{value:"split",id:"split-2",level:3},{value:"rsplit",id:"rsplit",level:3},{value:"rsplit",id:"rsplit-1",level:3},{value:"count",id:"count",level:3},{value:"contains",id:"contains",level:3},{value:"concat",id:"concat",level:3},{value:"join",id:"join",level:3},{value:"ArraysUpgradeable",id:"arraysupgradeable",level:2},{value:"getSum",id:"getsum",level:3},{value:"toString",id:"tostring-1",level:3},{value:"toCsv",id:"tocsv",level:3},{value:"toCsv",id:"tocsv-1",level:3},{value:"StringsExtensions",id:"stringsextensions",level:2},{value:"toString",id:"tostring-2",level:3},{value:"SlotAlreadyMinted",id:"slotalreadyminted-1",level:2},{value:"SlotOutOfBounds",id:"slotoutofbounds-1",level:2},{value:"SlotTokenOutOfBounds",id:"slottokenoutofbounds-1",level:2},{value:"ERC3525SlotEnumerableUpgradeable",id:"erc3525slotenumerableupgradeable-1",level:2},{value:"SlotData",id:"slotdata-1",level:3},{value:"_slotTokensIndex",id:"_slottokensindex-1",level:3},{value:"_allSlots",id:"_allslots-1",level:3},{value:"_allSlotsIndex",id:"_allslotsindex-1",level:3},{value:"constructor",id:"constructor-5",level:3},{value:"__ERC3525SlotEnumerableUpgradeable_init",id:"__erc3525slotenumerableupgradeable_init-1",level:3},{value:"supportsInterface",id:"supportsinterface-5",level:3},{value:"slotCount",id:"slotcount-2",level:3},{value:"slotByIndex",id:"slotbyindex-2",level:3},{value:"_slotExists",id:"_slotexists-1",level:3},{value:"tokenSupplyInSlot",id:"tokensupplyinslot-2",level:3},{value:"tokenInSlotByIndex",id:"tokeninslotbyindex-2",level:3},{value:"_tokenExistsInSlot",id:"_tokenexistsinslot-1",level:3},{value:"_createSlot",id:"_createslot-1",level:3},{value:"_beforeValueTransfer",id:"_beforevaluetransfer-2",level:3},{value:"_afterValueTransfer",id:"_aftervaluetransfer-2",level:3},{value:"_addSlotToAllSlotsEnumeration",id:"_addslottoallslotsenumeration-1",level:3},{value:"_addTokenToSlotEnumeration",id:"_addtokentoslotenumeration-1",level:3},{value:"_removeTokenFromSlotEnumeration",id:"_removetokenfromslotenumeration-1",level:3},{value:"__gap",id:"__gap-1",level:3},{value:"NonExistentToken",id:"nonexistenttoken-1",level:2},{value:"NonExistentSlot",id:"nonexistentslot-1",level:2},{value:"InsufficientBalance",id:"insufficientbalance-1",level:2},{value:"InsufficientAllowance",id:"insufficientallowance-1",level:2},{value:"ToZeroAddress",id:"tozeroaddress-1",level:2},{value:"InvalidID",id:"invalidid-1",level:2},{value:"AlreadyMinted",id:"alreadyminted-1",level:2},{value:"SlotsMismatch",id:"slotsmismatch-1",level:2},{value:"InvalidApproval",id:"invalidapproval-1",level:2},{value:"NotApprovedOrOwner",id:"notapprovedorowner-1",level:2},{value:"NotERC3525Receiver",id:"noterc3525receiver-1",level:2},{value:"NotERC721Receiver",id:"noterc721receiver-1",level:2},{value:"FromIncorrectOwner",id:"fromincorrectowner-1",level:2},{value:"ERC3525Upgradeable",id:"erc3525upgradeable-1",level:2},{value:"TokenData",id:"tokendata-1",level:3},{value:"AddressData",id:"addressdata-1",level:3},{value:"_name",id:"_name-1",level:3},{value:"_symbol",id:"_symbol-1",level:3},{value:"_decimals",id:"_decimals-1",level:3},{value:"_approvedValues",id:"_approvedvalues-1",level:3},{value:"_allTokens",id:"_alltokens-1",level:3},{value:"_allTokensIndex",id:"_alltokensindex-1",level:3},{value:"_addressData",id:"_addressdata-1",level:3},{value:"tokenCounter",id:"tokencounter-1",level:3},{value:"supportsInterface",id:"supportsinterface-6",level:3},{value:"constructor",id:"constructor-6",level:3},{value:"__ERC3525Upgradeable_init",id:"__erc3525upgradeable_init-1",level:3},{value:"name",id:"name-1",level:3},{value:"symbol",id:"symbol-1",level:3},{value:"balanceOf",id:"balanceof-4",level:3},{value:"balanceOf",id:"balanceof-5",level:3},{value:"ownerOf",id:"ownerof-1",level:3},{value:"slotOf",id:"slotof-2",level:3},{value:"allowance",id:"allowance-2",level:3},{value:"totalSupply",id:"totalsupply-1",level:3},{value:"tokenByIndex",id:"tokenbyindex-1",level:3},{value:"tokenOfOwnerByIndex",id:"tokenofownerbyindex-1",level:3},{value:"_isApprovedOrOwner",id:"_isapprovedorowner-1",level:3},{value:"_exists",id:"_exists-1",level:3},{value:"approve",id:"approve-3",level:3},{value:"approve",id:"approve-4",level:3},{value:"getApproved",id:"getapproved-1",level:3},{value:"setApprovalForAll",id:"setapprovalforall-1",level:3},{value:"isApprovedForAll",id:"isapprovedforall-1",level:3},{value:"transferFrom",id:"transferfrom-5",level:3},{value:"transferFrom",id:"transferfrom-6",level:3},{value:"transferFrom",id:"transferfrom-7",level:3},{value:"safeTransferFrom",id:"safetransferfrom-2",level:3},{value:"safeTransferFrom",id:"safetransferfrom-3",level:3},{value:"contractURI",id:"contracturi-3",level:3},{value:"_mint",id:"_mint-1",level:3},{value:"_mintValue",id:"_mintvalue-1",level:3},{value:"_splitValue",id:"_splitvalue-1",level:3},{value:"_mergeValue",id:"_mergevalue-1",level:3},{value:"_burn",id:"_burn-1",level:3},{value:"_approve",id:"_approve-1",level:3},{value:"_approveValue",id:"_approvevalue-1",level:3},{value:"_spendAllowance",id:"_spendallowance-1",level:3},{value:"_clearApprovedValues",id:"_clearapprovedvalues-1",level:3},{value:"_existApproveValue",id:"_existapprovevalue-1",level:3},{value:"_setApprovalForAll",id:"_setapprovalforall-1",level:3},{value:"_transferValue",id:"_transfervalue-1",level:3},{value:"_transferTokenId",id:"_transfertokenid-1",level:3},{value:"_safeTransferTokenId",id:"_safetransfertokenid-1",level:3},{value:"_beforeValueTransfer",id:"_beforevaluetransfer-3",level:3},{value:"_afterValueTransfer",id:"_aftervaluetransfer-3",level:3},{value:"_checkOnERC3525Received",id:"_checkonerc3525received-1",level:3},{value:"_checkOnERC721Received",id:"_checkonerc721received-1",level:3},{value:"_createOriginalTokenId",id:"_createoriginaltokenid-1",level:3},{value:"_addTokenToOwnerEnumeration",id:"_addtokentoownerenumeration-1",level:3},{value:"_removeTokenFromOwnerEnumeration",id:"_removetokenfromownerenumeration-1",level:3},{value:"_addTokenToAllTokensEnumeration",id:"_addtokentoalltokensenumeration-1",level:3},{value:"_removeTokenFromAllTokensEnumeration",id:"_removetokenfromalltokensenumeration-1",level:3},{value:"_msgSender",id:"_msgsender-2",level:3},{value:"valueDecimals",id:"valuedecimals-2",level:3},{value:"tokenURI",id:"tokenuri-2",level:3},{value:"slotURI",id:"sloturi-3",level:3},{value:"IHyperCertMinter",id:"ihypercertminter-1",level:2},{value:"IHyperCertSVG",id:"ihypercertsvg-1",level:2},{value:"HyperCertMetadata",id:"hypercertmetadata-1",level:2},{value:"EmptyInput",id:"emptyinput-1",level:2},{value:"DuplicateScope",id:"duplicatescope-1",level:2},{value:"InvalidScope",id:"invalidscope-1",level:2},{value:"InvalidTimeframe",id:"invalidtimeframe-1",level:2},{value:"ConflictingClaim",id:"conflictingclaim-1",level:2},{value:"InvalidInput",id:"invalidinput-1",level:2},{value:"HyperCertMinter",id:"hypercertminter-1",level:2},{value:"UPGRADER_ROLE",id:"upgrader_role-3",level:3},{value:"_metadata",id:"_metadata-1",level:3},{value:"workScopes",id:"workscopes-2",level:3},{value:"impactScopes",id:"impactscopes-2",level:3},{value:"rights",id:"rights-2",level:3},{value:"_contributorImpacts",id:"_contributorimpacts-1",level:3},{value:"_hyperCerts",id:"_hypercerts-1",level:3},{value:"Claim",id:"claim-2",level:3},{value:"ImpactClaimed",id:"impactclaimed-1",level:3},{value:"ImpactScopeAdded",id:"impactscopeadded-1",level:3},{value:"RightAdded",id:"rightadded-1",level:3},{value:"WorkScopeAdded",id:"workscopeadded-1",level:3},{value:"constructor",id:"constructor-7",level:3},{value:"initialize",id:"initialize-3",level:3},{value:"addImpactScope",id:"addimpactscope-1",level:3},{value:"addRight",id:"addright-1",level:3},{value:"addWorkScope",id:"addworkscope-1",level:3},{value:"mint",id:"mint-1",level:3},{value:"split",id:"split-3",level:3},{value:"merge",id:"merge-1",level:3},{value:"getImpactCert",id:"getimpactcert-2",level:3},{value:"supportsInterface",id:"supportsinterface-7",level:3},{value:"slotURI",id:"sloturi-4",level:3},{value:"tokenURI",id:"tokenuri-3",level:3},{value:"contractURI",id:"contracturi-4",level:3},{value:"burn",id:"burn-1",level:3},{value:"donate",id:"donate-1",level:3},{value:"_authorizeUpgrade",id:"_authorizeupgrade-3",level:3},{value:"_authorizeAdd",id:"_authorizeadd-1",level:3},{value:"_authorizeMint",id:"_authorizemint-1",level:3},{value:"_parseData",id:"_parsedata-1",level:3},{value:"_storeContributorsClaims",id:"_storecontributorsclaims",level:3},{value:"_hasKey",id:"_haskey",level:3},{value:"_msgSender",id:"_msgsender-3",level:3},{value:"setMetadataGenerator",id:"setmetadatagenerator-1",level:3},{value:"HyperCertSVG",id:"hypercertsvg-1",level:2},{value:"UPGRADER_ROLE",id:"upgrader_role-4",level:3},{value:"_version",id:"_version-2",level:3},{value:"backgrounds",id:"backgrounds-1",level:3},{value:"colors",id:"colors-1",level:3},{value:"backgroundCounter",id:"backgroundcounter-1",level:3},{value:"colorsCounter",id:"colorscounter-1",level:3},{value:"SVGParams",id:"svgparams-1",level:3},{value:"SVGColors",id:"svgcolors-1",level:3},{value:"BackgroundAdded",id:"backgroundadded-1",level:3},{value:"ColorsAdded",id:"colorsadded-1",level:3},{value:"constructor",id:"constructor-8",level:3},{value:"initialize",id:"initialize-4",level:3},{value:"addBackground",id:"addbackground-1",level:3},{value:"addColors",id:"addcolors-1",level:3},{value:"generateSvgHyperCert",id:"generatesvghypercert-2",level:3},{value:"generateSvgFraction",id:"generatesvgfraction-2",level:3},{value:"_generateHyperCert",id:"_generatehypercert-1",level:3},{value:"_generateHyperCertFraction",id:"_generatehypercertfraction-1",level:3},{value:"_generateBackgroundPattern",id:"_generatebackgroundpattern-1",level:3},{value:"_generateColors",id:"_generatecolors-1",level:3},{value:"_getBackgroundIndex",id:"_getbackgroundindex-1",level:3},{value:"_getColorIndex",id:"_getcolorindex-1",level:3},{value:"_generateHeader",id:"_generateheader-1",level:3},{value:"_generateScopeOfImpact",id:"_generatescopeofimpact-1",level:3},{value:"_generateName",id:"_generatename-1",level:3},{value:"_generateWorkperiod",id:"_generateworkperiod-1",level:3},{value:"_generateDivider",id:"_generatedivider-1",level:3},{value:"_generateFraction",id:"_generatefraction-1",level:3},{value:"stringToBytes32",id:"stringtobytes32-1",level:3},{value:"bytes32ToString",id:"bytes32tostring-1",level:3},{value:"cutString",id:"cutstring-1",level:3},{value:"getPercent",id:"getpercent-1",level:3},{value:"uint2decimal",id:"uint2decimal-1",level:3},{value:"version",id:"version-1",level:3},{value:"updateVersion",id:"updateversion-1",level:3},{value:"supportsInterface",id:"supportsinterface-8",level:3},{value:"_authorizeUpgrade",id:"_authorizeupgrade-4",level:3},{value:"IERC3525MetadataUpgradeable",id:"ierc3525metadataupgradeable-1",level:2},{value:"IERC3525Receiver",id:"ierc3525receiver-1",level:2},{value:"IERC3525SlotApprovableUpgradeable",id:"ierc3525slotapprovableupgradeable-1",level:2},{value:"IERC3525SlotEnumerableUpgradeable",id:"ierc3525slotenumerableupgradeable-1",level:2},{value:"IERC3525Upgradeable",id:"ierc3525upgradeable-1",level:2},{value:"IHyperCertMetadata",id:"ihypercertmetadata-1",level:2},{value:"DateTime",id:"datetime-1",level:2},{value:"strings",id:"strings-1",level:2},{value:"ArraysUpgradeable",id:"arraysupgradeable-1",level:2},{value:"getSum",id:"getsum-1",level:3},{value:"toString",id:"tostring-3",level:3},{value:"toCsv",id:"tocsv-2",level:3},{value:"toCsv",id:"tocsv-3",level:3},{value:"StringsExtensions",id:"stringsextensions-1",level:2}],d={toc:u};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"solidity-api"},"Solidity API"),(0,r.kt)("h2",{id:"slotalreadyminted"},"SlotAlreadyMinted"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error SlotAlreadyMinted()\n")),(0,r.kt)("h2",{id:"slotoutofbounds"},"SlotOutOfBounds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error SlotOutOfBounds(uint256 slotId)\n")),(0,r.kt)("h2",{id:"slottokenoutofbounds"},"SlotTokenOutOfBounds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error SlotTokenOutOfBounds(uint256 slotId, uint256 tokenId)\n")),(0,r.kt)("h2",{id:"erc3525slotenumerableupgradeable"},"ERC3525SlotEnumerableUpgradeable"),(0,r.kt)("h3",{id:"slotdata"},"SlotData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct SlotData {\n  uint256 slot;\n  uint256[] slotTokens;\n}\n\n")),(0,r.kt)("h3",{id:"_slottokensindex"},"_","slotTokensIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => mapping(uint256 => uint256)) _slotTokensIndex\n")),(0,r.kt)("h3",{id:"_allslots"},"_","allSlots"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ERC3525SlotEnumerableUpgradeable.SlotData[] _allSlots\n")),(0,r.kt)("h3",{id:"_allslotsindex"},"_","allSlotsIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) _allSlotsIndex\n")),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,r.kt)("p",null,"Contract constructor logic"),(0,r.kt)("h3",{id:"__erc3525slotenumerableupgradeable_init"},"_","_","ERC3525SlotEnumerableUpgradeable_init"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function __ERC3525SlotEnumerableUpgradeable_init(string name, string symbol) public\n")),(0,r.kt)("p",null,"Contract initialization logic"),(0,r.kt)("h3",{id:"supportsinterface"},"supportsInterface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"slotcount"},"slotCount"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotCount() public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"Get the total amount of slots stored by the contract."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount of slots")))),(0,r.kt)("h3",{id:"slotbyindex"},"slotByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotByIndex(uint256 index_) public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"Get the slot at the specified index of all slots stored by the contract."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index","_"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The index in the slot list")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot at ",(0,r.kt)("inlineCode",{parentName:"td"},"index")," of all slots.")))),(0,r.kt)("h3",{id:"_slotexists"},"_","slotExists"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _slotExists(uint256 slot_) internal view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"tokensupplyinslot"},"tokenSupplyInSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenSupplyInSlot(uint256 slot_) public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"Get the total amount of tokens with the same slot."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"slot","_"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to query token supply for")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount of tokens with the specified ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"))))),(0,r.kt)("h3",{id:"tokeninslotbyindex"},"tokenInSlotByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenInSlotByIndex(uint256 slot_, uint256 index_) public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"Get the token at the specified index of all tokens with the same slot."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"slot","_"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to query tokens with")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index","_"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The index in the token list of the slot")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token ID at ",(0,r.kt)("inlineCode",{parentName:"td"},"_index")," of all tokens with ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"))))),(0,r.kt)("h3",{id:"_tokenexistsinslot"},"_","tokenExistsInSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _tokenExistsInSlot(uint256 slot_, uint256 tokenId_) private view returns (bool)\n")),(0,r.kt)("h3",{id:"_createslot"},"_","createSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _createSlot(uint256 slot_) internal virtual\n")),(0,r.kt)("h3",{id:"_beforevaluetransfer"},"_","beforeValueTransfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _beforeValueTransfer(address from_, address to_, uint256 fromTokenId_, uint256 toTokenId_, uint256 slot_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_aftervaluetransfer"},"_","afterValueTransfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _afterValueTransfer(address from_, address to_, uint256 fromTokenId_, uint256 toTokenId_, uint256 slot_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_addslottoallslotsenumeration"},"_","addSlotToAllSlotsEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _addSlotToAllSlotsEnumeration(struct ERC3525SlotEnumerableUpgradeable.SlotData slotData) private\n")),(0,r.kt)("h3",{id:"_addtokentoslotenumeration"},"_","addTokenToSlotEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _addTokenToSlotEnumeration(uint256 slot_, uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"_removetokenfromslotenumeration"},"_","removeTokenFromSlotEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _removeTokenFromSlotEnumeration(uint256 slot_, uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"__gap"},"_","_","gap"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256[47] __gap\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This empty reserved space is put in place to allow future versions to add new\nvariables without shifting down storage in the inheritance chain.")),(0,r.kt)("h2",{id:"nonexistenttoken"},"NonExistentToken"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NonExistentToken(uint256 tokenId)\n")),(0,r.kt)("h2",{id:"nonexistentslot"},"NonExistentSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NonExistentSlot(uint256 slotId)\n")),(0,r.kt)("h2",{id:"insufficientbalance"},"InsufficientBalance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InsufficientBalance(uint256 transferAmount, uint256 balance)\n")),(0,r.kt)("h2",{id:"insufficientallowance"},"InsufficientAllowance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InsufficientAllowance(uint256 transferAmount, uint256 allowance)\n")),(0,r.kt)("h2",{id:"tozeroaddress"},"ToZeroAddress"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error ToZeroAddress()\n")),(0,r.kt)("h2",{id:"invalidid"},"InvalidID"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidID(uint256 tokenId)\n")),(0,r.kt)("h2",{id:"alreadyminted"},"AlreadyMinted"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error AlreadyMinted(uint256 tokenId)\n")),(0,r.kt)("h2",{id:"slotsmismatch"},"SlotsMismatch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error SlotsMismatch(uint256 fromTokenId, uint256 toTokenId)\n")),(0,r.kt)("h2",{id:"invalidapproval"},"InvalidApproval"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidApproval(uint256 tokenId, address from, address to)\n")),(0,r.kt)("h2",{id:"notapprovedorowner"},"NotApprovedOrOwner"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NotApprovedOrOwner()\n")),(0,r.kt)("h2",{id:"noterc3525receiver"},"NotERC3525Receiver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NotERC3525Receiver(address receiver)\n")),(0,r.kt)("h2",{id:"noterc721receiver"},"NotERC721Receiver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NotERC721Receiver(address receiver)\n")),(0,r.kt)("h2",{id:"fromincorrectowner"},"FromIncorrectOwner"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error FromIncorrectOwner()\n")),(0,r.kt)("h2",{id:"erc3525upgradeable"},"ERC3525Upgradeable"),(0,r.kt)("h3",{id:"tokendata"},"TokenData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TokenData {\n  uint256 id;\n  uint256 slot;\n  uint256 balance;\n  address owner;\n  address approved;\n  address[] valueApprovals;\n}\n\n")),(0,r.kt)("h3",{id:"addressdata"},"AddressData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AddressData {\n  uint256[] ownedTokens;\n  mapping(uint256 => uint256) ownedTokensIndex;\n  mapping(address => bool) approvals;\n}\n\n")),(0,r.kt)("h3",{id:"_name"},"_","name"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"string _name\n")),(0,r.kt)("h3",{id:"_symbol"},"_","symbol"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"string _symbol\n")),(0,r.kt)("h3",{id:"_decimals"},"_","decimals"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint8 _decimals\n")),(0,r.kt)("h3",{id:"_approvedvalues"},"_","approvedValues"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => mapping(address => uint256)) _approvedValues\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"tokenId => operator => units")),(0,r.kt)("h3",{id:"_alltokens"},"_","allTokens"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ERC3525Upgradeable.TokenData[] _allTokens\n")),(0,r.kt)("h3",{id:"_alltokensindex"},"_","allTokensIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) _allTokensIndex\n")),(0,r.kt)("h3",{id:"_addressdata"},"_","addressData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => struct ERC3525Upgradeable.AddressData) _addressData\n")),(0,r.kt)("h3",{id:"tokencounter"},"tokenCounter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 tokenCounter\n")),(0,r.kt)("h3",{id:"supportsinterface-1"},"supportsInterface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"constructor-1"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,r.kt)("p",null,"Contract constructor logic"),(0,r.kt)("h3",{id:"__erc3525upgradeable_init"},"_","_","ERC3525Upgradeable_init"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function __ERC3525Upgradeable_init(string name_, string symbol_) public\n")),(0,r.kt)("p",null,"Contract initialization logic"),(0,r.kt)("h3",{id:"name"},"name"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function name() public view virtual returns (string)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Returns the token collection name.")),(0,r.kt)("h3",{id:"symbol"},"symbol"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function symbol() public view virtual returns (string)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Returns the token collection symbol.")),(0,r.kt)("h3",{id:"valuedecimals"},"valueDecimals"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function valueDecimals() external view virtual returns (uint8 decimals)\n")),(0,r.kt)("p",null,"Get the number of decimals the token uses for value - e.g. 6, means the user\nrepresentation of the value of a token can be calculated by dividing it by 1,000,000.\nConsidering the compatibility with third-party wallets, this function is defined as\n",(0,r.kt)("inlineCode",{parentName:"p"},"valueDecimals()")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"decimals()")," to avoid conflict with EIP-20 tokens."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"decimals"),(0,r.kt)("td",{parentName:"tr",align:null},"uint8"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of decimals for value")))),(0,r.kt)("h3",{id:"balanceof"},"balanceOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(uint256 tokenId_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"balanceof-1"},"balanceOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(address owner_) public view virtual returns (uint256 balance)\n")),(0,r.kt)("h3",{id:"ownerof"},"ownerOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownerOf(uint256 tokenId_) public view virtual returns (address owner_)\n")),(0,r.kt)("h3",{id:"slotof"},"slotOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotOf(uint256 tokenId_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"allowance"},"allowance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function allowance(uint256 tokenId_, address operator_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"totalsupply"},"totalSupply"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function totalSupply() public view virtual returns (uint256)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Returns the total amount of tokens stored by the contract.")),(0,r.kt)("h3",{id:"tokenbyindex"},"tokenByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenByIndex(uint256 index_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"tokenofownerbyindex"},"tokenOfOwnerByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenOfOwnerByIndex(address owner_, uint256 index_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"_isapprovedorowner"},"_","isApprovedOrOwner"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _isApprovedOrOwner(address operator_, uint256 tokenId_) internal view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"_exists"},"_","exists"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _exists(uint256 tokenId_) internal view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"approve"},"approve"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(uint256 tokenId_, address to_, uint256 value_) external payable virtual\n")),(0,r.kt)("h3",{id:"approve-1"},"approve"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(address to_, uint256 tokenId_) public virtual\n")),(0,r.kt)("h3",{id:"getapproved"},"getApproved"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getApproved(uint256 tokenId_) public view virtual returns (address)\n")),(0,r.kt)("h3",{id:"setapprovalforall"},"setApprovalForAll"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function setApprovalForAll(address operator_, bool approved_) public virtual\n")),(0,r.kt)("h3",{id:"isapprovedforall"},"isApprovedForAll"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isApprovedForAll(address owner_, address operator_) public view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"transferfrom"},"transferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(uint256 fromTokenId_, address to_, uint256 value_) public payable virtual returns (uint256 newTokenId)\n")),(0,r.kt)("h3",{id:"transferfrom-1"},"transferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(uint256 fromTokenId_, uint256 toTokenId_, uint256 value_) public payable virtual\n")),(0,r.kt)("h3",{id:"transferfrom-2"},"transferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(address from_, address to_, uint256 tokenId_) public virtual\n")),(0,r.kt)("h3",{id:"safetransferfrom"},"safeTransferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeTransferFrom(address from_, address to_, uint256 tokenId_, bytes data_) public virtual\n")),(0,r.kt)("h3",{id:"safetransferfrom-1"},"safeTransferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeTransferFrom(address from_, address to_, uint256 tokenId_) public virtual\n")),(0,r.kt)("h3",{id:"contracturi"},"contractURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function contractURI() public view virtual returns (string)\n")),(0,r.kt)("p",null,"Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function SHOULD return the URI for this contract in JSON format, starting with\nheader ",(0,r.kt)("inlineCode",{parentName:"em"},"data:application/json;"),".\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525")," for the JSON schema for contract URI.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The JSON formatted URI of the current ERC3525 contract")))),(0,r.kt)("h3",{id:"tokenuri"},"tokenURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenURI(uint256 tokenId_) external view virtual returns (string)\n")),(0,r.kt)("h3",{id:"sloturi"},"slotURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotURI(uint256 _slot) external view virtual returns (string)\n")),(0,r.kt)("p",null,"Returns the Uniform Resource Identifier (URI) for the specified slot."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function SHOULD return the URI for ",(0,r.kt)("inlineCode",{parentName:"em"},"_slot")," in JSON format, starting with header\n",(0,r.kt)("inlineCode",{parentName:"em"},"data:application/json;"),".\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525")," for the JSON schema for slot URI.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The JSON formatted URI of ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"))))),(0,r.kt)("h3",{id:"_mint"},"_","mint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mint(address to_, uint256 tokenId_, uint256 slot_) internal\n")),(0,r.kt)("h3",{id:"_mintvalue"},"_","mintValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mintValue(address to_, uint256 slot_, uint256 value_) internal virtual returns (uint256 tokenId)\n")),(0,r.kt)("h3",{id:"_splitvalue"},"_","splitValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _splitValue(uint256 fromToken_, uint256 value_) internal virtual returns (uint256 tokenId)\n")),(0,r.kt)("h3",{id:"_mergevalue"},"_","mergeValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mergeValue(uint256 fromToken_, uint256 toToken_) internal virtual\n")),(0,r.kt)("h3",{id:"_burn"},"_","burn"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _burn(uint256 tokenId_) internal virtual\n")),(0,r.kt)("h3",{id:"_approve"},"_","approve"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _approve(address to_, uint256 tokenId_) internal virtual\n")),(0,r.kt)("h3",{id:"_approvevalue"},"_","approveValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _approveValue(uint256 tokenId_, address to_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_spendallowance"},"_","spendAllowance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _spendAllowance(address operator_, uint256 tokenId_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_clearapprovedvalues"},"_","clearApprovedValues"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _clearApprovedValues(uint256 tokenId_) internal virtual\n")),(0,r.kt)("h3",{id:"_existapprovevalue"},"_","existApproveValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _existApproveValue(address to_, uint256 tokenId_) internal view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"_setapprovalforall"},"_","setApprovalForAll"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setApprovalForAll(address owner_, address operator_, bool approved_) internal virtual\n")),(0,r.kt)("h3",{id:"_transfervalue"},"_","transferValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferValue(uint256 fromTokenId_, uint256 toTokenId_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_transfertokenid"},"_","transferTokenId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferTokenId(address from_, address to_, uint256 tokenId_) internal virtual\n")),(0,r.kt)("h3",{id:"_safetransfertokenid"},"_","safeTransferTokenId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _safeTransferTokenId(address from_, address to_, uint256 tokenId_, bytes data_) internal virtual\n")),(0,r.kt)("h3",{id:"_beforevaluetransfer-1"},"_","beforeValueTransfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _beforeValueTransfer(address from_, address to_, uint256 fromTokenId_, uint256 toTokenId_, uint256 slot_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_aftervaluetransfer-1"},"_","afterValueTransfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _afterValueTransfer(address from_, address to_, uint256 fromTokenId_, uint256 toTokenId_, uint256 slot_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_checkonerc3525received"},"_","checkOnERC3525Received"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _checkOnERC3525Received(uint256 fromTokenId_, uint256 toTokenId_, uint256 value_, bytes data_) private returns (bool)\n")),(0,r.kt)("h3",{id:"_checkonerc721received"},"_","checkOnERC721Received"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _checkOnERC721Received(address from_, address to_, uint256 tokenId_, bytes data_) private returns (bool)\n")),(0,r.kt)("h3",{id:"_createoriginaltokenid"},"_","createOriginalTokenId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _createOriginalTokenId() internal virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"_addtokentoownerenumeration"},"_","addTokenToOwnerEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _addTokenToOwnerEnumeration(address to_, uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"_removetokenfromownerenumeration"},"_","removeTokenFromOwnerEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _removeTokenFromOwnerEnumeration(address from_, uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"_addtokentoalltokensenumeration"},"_","addTokenToAllTokensEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _addTokenToAllTokensEnumeration(struct ERC3525Upgradeable.TokenData tokenData_) private\n")),(0,r.kt)("h3",{id:"_removetokenfromalltokensenumeration"},"_","removeTokenFromAllTokensEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _removeTokenFromAllTokensEnumeration(uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"_msgsender"},"_","msgSender"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _msgSender() internal view virtual returns (address sender)\n")),(0,r.kt)("h3",{id:"checktokenexists"},"checkTokenExists"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function checkTokenExists(uint256 tokenId) internal view\n")),(0,r.kt)("h2",{id:"ihypercertminter"},"IHyperCertMinter"),(0,r.kt)("h3",{id:"claim"},"Claim"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Claim {\n  bytes32 claimHash;\n  uint64[2] workTimeframe;\n  uint64[2] impactTimeframe;\n  bytes32[] workScopes;\n  bytes32[] impactScopes;\n  bytes32[] rights;\n  address[] contributors;\n  uint256 totalUnits;\n  uint16 version;\n  bool exists;\n  string name;\n  string description;\n  string uri;\n}\n\n")),(0,r.kt)("h3",{id:"workscopes"},"workScopes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function workScopes(bytes32 workScopeId) external view returns (string)\n")),(0,r.kt)("h3",{id:"impactscopes"},"impactScopes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function impactScopes(bytes32 impactScopeId) external view returns (string)\n")),(0,r.kt)("h3",{id:"rights"},"rights"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function rights(bytes32 rightsId) external view returns (string)\n")),(0,r.kt)("h3",{id:"getimpactcert"},"getImpactCert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getImpactCert(uint256 claimID) external view returns (struct IHyperCertMinter.Claim)\n")),(0,r.kt)("h3",{id:"balanceof-2"},"balanceOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(uint256 tokenId) external view returns (uint256)\n")),(0,r.kt)("h2",{id:"ihypercertsvg"},"IHyperCertSVG"),(0,r.kt)("h3",{id:"generatesvghypercert"},"generateSvgHyperCert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateSvgHyperCert(string name, string[] scopesOfImpact, uint64[2] workTimeframe, uint64[2] impactTimeframe, uint256 totalUnits) external view returns (string)\n")),(0,r.kt)("h3",{id:"generatesvgfraction"},"generateSvgFraction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateSvgFraction(string name, string[] scopesOfImpact, uint64[2] workTimeframe, uint64[2] impactTimeframe, uint256 units, uint256 totalUnits) external view returns (string)\n")),(0,r.kt)("h2",{id:"hypercertmetadata"},"HyperCertMetadata"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Hypercertificate metadata creation logic")),(0,r.kt)("h3",{id:"upgrader_role"},"UPGRADER_ROLE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 UPGRADER_ROLE\n")),(0,r.kt)("p",null,"User role required in order to upgrade the contract"),(0,r.kt)("h3",{id:"_version"},"_","version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 _version\n")),(0,r.kt)("p",null,"Current version of the contract"),(0,r.kt)("h3",{id:"_svggenerator"},"_","svgGenerator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IHyperCertSVG _svgGenerator\n")),(0,r.kt)("h3",{id:"constructor-2"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,r.kt)("p",null,"Contract constructor logic"),(0,r.kt)("h3",{id:"initialize"},"initialize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address svgGenerationAddress) public\n")),(0,r.kt)("p",null,"Contract initialization logic"),(0,r.kt)("h3",{id:"generatecontracturi"},"generateContractURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateContractURI() external pure returns (string)\n")),(0,r.kt)("h3",{id:"generatetokenuri"},"generateTokenURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateTokenURI(uint256 slotId, uint256 tokenId) external view virtual returns (string)\n")),(0,r.kt)("h3",{id:"generatesloturi"},"generateSlotURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateSlotURI(uint256 slotId) external view virtual returns (string)\n")),(0,r.kt)("h3",{id:"_hypercertdimensions"},"_","hyperCertDimensions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _hyperCertDimensions(struct IHyperCertMinter.Claim claim) internal view returns (string)\n")),(0,r.kt)("h3",{id:"_generateimagestringfraction"},"_","generateImageStringFraction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateImageStringFraction(struct IHyperCertMinter.Claim claim, uint256 units, string[] impactScopes) internal view returns (string)\n")),(0,r.kt)("h3",{id:"_generateimagestringhypercert"},"_","generateImageStringHypercert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateImageStringHypercert(struct IHyperCertMinter.Claim claim, string[] scopesOfImpact) internal view returns (string)\n")),(0,r.kt)("h3",{id:"_propertystring"},"_","propertyString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _propertyString(string name_, string description_, string value_, bool isIntrinsic_) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_propertystring-1"},"_","propertyString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _propertyString(string name_, string description_, uint256 value_, bool isIntrinsic_) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_propertystringcsv"},"_","propertyStringCSV"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _propertyStringCSV(string name_, string description_, string value_, bool isIntrinsic_) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_propertystringrange"},"_","propertyStringRange"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _propertyStringRange(string name_, string description_, uint256 value_, uint256 maxValue, bool isIntrinsic_) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_propertystring-2"},"_","propertyString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _propertyString(string name_, string description_, bytes32[] value_, bool isIntrinsic_) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_propertystring-3"},"_","propertyString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _propertyString(string name_, string description_, uint256[] array_, bool isIntrinsic_) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_propertystring-4"},"_","propertyString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _propertyString(string name_, string description_, uint64[2] array_, bool isIntrinsic_) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_propertystring-5"},"_","propertyString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _propertyString(string name_, string description_, string[] array_, bool isIntrinsic_) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_mapworkscopesidstovalues"},"_","mapWorkScopesIdsToValues"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mapWorkScopesIdsToValues(bytes32[] keys) internal view returns (string[] vals)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"use keys to look up values in the supplied mapping")),(0,r.kt)("h3",{id:"_mapimpactscopesidstovalues"},"_","mapImpactScopesIdsToValues"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mapImpactScopesIdsToValues(bytes32[] keys) internal view returns (string[] vals)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"use keys to look up values in the supplied mapping")),(0,r.kt)("h3",{id:"_maprightsidstovalues"},"_","mapRightsIdsToValues"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mapRightsIdsToValues(bytes32[] keys) internal view returns (string[] vals)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"use keys to look up values in the supplied mapping")),(0,r.kt)("h3",{id:"version"},"version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function version() public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"gets the current version of the contract"),(0,r.kt)("h3",{id:"updateversion"},"updateVersion"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateVersion() external\n")),(0,r.kt)("p",null,"Update the contract version number\nOnly allowed for member of UPGRADER_ROLE"),(0,r.kt)("h3",{id:"supportsinterface-2"},"supportsInterface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view returns (bool)\n")),(0,r.kt)("p",null,"Returns a flag indicating if the contract supports the specified interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interfaceId"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the interface")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"true, if the interface is supported")))),(0,r.kt)("h3",{id:"_authorizeupgrade"},"_","authorizeUpgrade"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeUpgrade(address) internal view\n")),(0,r.kt)("p",null,"upgrade authorization logic"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"adds onlyRole(UPGRADER_ROLE) requirement")),(0,r.kt)("h2",{id:"emptyinput"},"EmptyInput"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error EmptyInput()\n")),(0,r.kt)("h2",{id:"duplicatescope"},"DuplicateScope"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error DuplicateScope()\n")),(0,r.kt)("h2",{id:"invalidscope"},"InvalidScope"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidScope()\n")),(0,r.kt)("h2",{id:"invalidtimeframe"},"InvalidTimeframe"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidTimeframe(uint64 from, uint64 to)\n")),(0,r.kt)("h2",{id:"conflictingclaim"},"ConflictingClaim"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error ConflictingClaim()\n")),(0,r.kt)("h2",{id:"invalidinput"},"InvalidInput"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidInput()\n")),(0,r.kt)("h2",{id:"hypercertminter"},"HyperCertMinter"),(0,r.kt)("p",null,"Contains functions and events to initialize and issue a hypercertificate"),(0,r.kt)("h3",{id:"upgrader_role-1"},"UPGRADER_ROLE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 UPGRADER_ROLE\n")),(0,r.kt)("p",null,"User role required in order to upgrade the contract"),(0,r.kt)("h3",{id:"_metadata"},"_","metadata"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IHyperCertMetadata _metadata\n")),(0,r.kt)("p",null,"Hypercert metadata contract"),(0,r.kt)("h3",{id:"workscopes-1"},"workScopes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => string) workScopes\n")),(0,r.kt)("p",null,"Mapping of id's to work-scopes"),(0,r.kt)("h3",{id:"impactscopes-1"},"impactScopes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => string) impactScopes\n")),(0,r.kt)("p",null,"Mapping of id's to impact-scopes"),(0,r.kt)("h3",{id:"rights-1"},"rights"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => string) rights\n")),(0,r.kt)("p",null,"Mapping of id's to rights"),(0,r.kt)("h3",{id:"_contributorimpacts"},"_","contributorImpacts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => mapping(bytes32 => bool)) _contributorImpacts\n")),(0,r.kt)("h3",{id:"_hypercerts"},"_","hyperCerts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct HyperCertMinter.Claim) _hyperCerts\n")),(0,r.kt)("h3",{id:"claim-1"},"Claim"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Claim {\n  bytes32 claimHash;\n  uint64[2] workTimeframe;\n  uint64[2] impactTimeframe;\n  bytes32[] workScopes;\n  bytes32[] impactScopes;\n  bytes32[] rights;\n  address[] contributors;\n  uint256 totalUnits;\n  string name;\n  string description;\n  string uri;\n  address minter;\n  uint16 version;\n  bool exists;\n}\n\n")),(0,r.kt)("h3",{id:"impactclaimed"},"ImpactClaimed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ImpactClaimed(uint256 id, address minter, uint64[] fractions)\n")),(0,r.kt)("p",null,"Emitted when an impact is claimed."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the claimed impact.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minter"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of cert minter.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fractions"),(0,r.kt)("td",{parentName:"tr",align:null},"uint64[]"),(0,r.kt)("td",{parentName:"tr",align:null},"Units of tokens issued under the hypercert.")))),(0,r.kt)("h3",{id:"impactscopeadded"},"ImpactScopeAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ImpactScopeAdded(bytes32 id, string text)\n")),(0,r.kt)("p",null,"Emitted when a new impact scope is added."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the impact scope.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Short text code of the impact scope.")))),(0,r.kt)("h3",{id:"rightadded"},"RightAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event RightAdded(bytes32 id, string text)\n")),(0,r.kt)("p",null,"Emitted when a new right is added."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the right.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Short text code of the right.")))),(0,r.kt)("h3",{id:"workscopeadded"},"WorkScopeAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event WorkScopeAdded(bytes32 id, string text)\n")),(0,r.kt)("p",null,"Emitted when a new work scope is added."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the work scope.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Short text code of the work scope.")))),(0,r.kt)("h3",{id:"constructor-3"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,r.kt)("p",null,"Contract constructor logic"),(0,r.kt)("h3",{id:"initialize-1"},"initialize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address metadataAddress) public\n")),(0,r.kt)("p",null,"Contract initialization logic"),(0,r.kt)("h3",{id:"supportsinterface-3"},"supportsInterface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view returns (bool)\n")),(0,r.kt)("p",null,"Returns a flag indicating if the contract supports the specified interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interfaceId"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the interface")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"true, if the interface is supported")))),(0,r.kt)("h3",{id:"addimpactscope"},"addImpactScope"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addImpactScope(string text) external\n")),(0,r.kt)("p",null,"Adds a new impact scope"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Text representing the impact scope")))),(0,r.kt)("h3",{id:"addright"},"addRight"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addRight(string text) external\n")),(0,r.kt)("p",null,"Adds a new right"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Text representing the right")))),(0,r.kt)("h3",{id:"addworkscope"},"addWorkScope"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addWorkScope(string text) external\n")),(0,r.kt)("p",null,"Adds a new work scope"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Text representing the work scope")))),(0,r.kt)("h3",{id:"mint"},"mint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address account, bytes data) external virtual\n")),(0,r.kt)("p",null,"Issues a new hypercertificate"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"account"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Account issuing the new hypercertificate")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes"),(0,r.kt)("td",{parentName:"tr",align:null},"Data representing the parameters of the claim")))),(0,r.kt)("h3",{id:"split"},"split"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function split(uint256 tokenId, uint256[] amounts) external\n")),(0,r.kt)("h3",{id:"merge"},"merge"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function merge(uint256[] tokenIds) external\n")),(0,r.kt)("h3",{id:"getimpactcert-1"},"getImpactCert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getImpactCert(uint256 claimID) external view returns (struct HyperCertMinter.Claim)\n")),(0,r.kt)("p",null,"Gets the impact claim with the specified id"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"claimID"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the claim")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"struct HyperCertMinter.Claim"),(0,r.kt)("td",{parentName:"tr",align:null},"The claim, if it doesn't exist with default values")))),(0,r.kt)("h3",{id:"sloturi-1"},"slotURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotURI(uint256 slotId_) external view returns (string)\n")),(0,r.kt)("h3",{id:"tokenuri-1"},"tokenURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenURI(uint256 tokenId_) external view returns (string)\n")),(0,r.kt)("h3",{id:"contracturi-1"},"contractURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function contractURI() public view returns (string)\n")),(0,r.kt)("p",null,"Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function SHOULD return the URI for this contract in JSON format, starting with\nheader ",(0,r.kt)("inlineCode",{parentName:"em"},"data:application/json;"),".\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525")," for the JSON schema for contract URI.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The JSON formatted URI of the current ERC3525 contract")))),(0,r.kt)("h3",{id:"burn"},"burn"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(uint256 tokenId_) external\n")),(0,r.kt)("h3",{id:"donate"},"donate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function donate(uint256 tokenId_) external\n")),(0,r.kt)("h3",{id:"_authorizeupgrade-1"},"_","authorizeUpgrade"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeUpgrade(address) internal view\n")),(0,r.kt)("p",null,"upgrade authorization logic"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"adds onlyRole(UPGRADER_ROLE) requirement")),(0,r.kt)("h3",{id:"_authorizeadd"},"_","authorizeAdd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeAdd(string text, mapping(bytes32 => string) map) internal view virtual returns (bytes32 id)\n")),(0,r.kt)("p",null,"Pre-add validation checks"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Text to be added")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"map"),(0,r.kt)("td",{parentName:"tr",align:null},"mapping(bytes32 ","=",">"," string)"),(0,r.kt)("td",{parentName:"tr",align:null},"Storage mapping that will be appended")))),(0,r.kt)("h3",{id:"_authorizemint"},"_","authorizeMint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeMint(address account, struct HyperCertMinter.Claim claim) internal view virtual\n")),(0,r.kt)("p",null,"Pre-mint validation checks"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"account"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Destination address for the mint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"claim"),(0,r.kt)("td",{parentName:"tr",align:null},"struct HyperCertMinter.Claim"),(0,r.kt)("td",{parentName:"tr",align:null},"Impact claim data")))),(0,r.kt)("h3",{id:"_parsedata"},"_","parseData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _parseData(bytes data) internal pure returns (struct HyperCertMinter.Claim claim, uint64[])\n")),(0,r.kt)("p",null,"Parse bytes to Claim and URI"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function is overridable in order to support future schema changes")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes"),(0,r.kt)("td",{parentName:"tr",align:null},"Byte data representing the claim")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"claim"),(0,r.kt)("td",{parentName:"tr",align:null},"struct HyperCertMinter.Claim"),(0,r.kt)("td",{parentName:"tr",align:null},"The parsed Claim struct")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[1]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint64[]"),(0,r.kt)("td",{parentName:"tr",align:null},"Claim metadata URI")))),(0,r.kt)("h3",{id:"_msgsender-1"},"_","msgSender"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _msgSender() internal view returns (address sender)\n")),(0,r.kt)("h3",{id:"setmetadatagenerator"},"setMetadataGenerator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMetadataGenerator(address metadataGenerator) external\n")),(0,r.kt)("h2",{id:"hypercertsvg"},"HyperCertSVG"),(0,r.kt)("h3",{id:"upgrader_role-2"},"UPGRADER_ROLE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 UPGRADER_ROLE\n")),(0,r.kt)("p",null,"User role required in order to upgrade the contract"),(0,r.kt)("h3",{id:"_version-1"},"_","version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 _version\n")),(0,r.kt)("p",null,"Current version of the contract"),(0,r.kt)("h3",{id:"backgrounds"},"backgrounds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => string) backgrounds\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"id => background")),(0,r.kt)("h3",{id:"colors"},"colors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct HyperCertSVG.SVGColors) colors\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"id => colors")),(0,r.kt)("h3",{id:"backgroundcounter"},"backgroundCounter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 backgroundCounter\n")),(0,r.kt)("h3",{id:"colorscounter"},"colorsCounter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 colorsCounter\n")),(0,r.kt)("h3",{id:"svgparams"},"SVGParams"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct SVGParams {\n  string name;\n  string[] scopesOfImpact;\n  uint64[2] workTimeframe;\n  uint64[2] impactTimeframe;\n  uint256 units;\n  uint256 totalUnits;\n}\n\n")),(0,r.kt)("h3",{id:"svgcolors"},"SVGColors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct SVGColors {\n  string primary;\n  string labels;\n  string background;\n}\n\n")),(0,r.kt)("h3",{id:"backgroundadded"},"BackgroundAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event BackgroundAdded(uint256 id)\n")),(0,r.kt)("h3",{id:"colorsadded"},"ColorsAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ColorsAdded(uint256 id, struct HyperCertSVG.SVGColors colors)\n")),(0,r.kt)("h3",{id:"constructor-4"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,r.kt)("p",null,"Contract constructor logic"),(0,r.kt)("h3",{id:"initialize-2"},"initialize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize() public\n")),(0,r.kt)("p",null,"Contract initialization logic"),(0,r.kt)("h3",{id:"addbackground"},"addBackground"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addBackground(string svgString) external returns (uint256 id)\n")),(0,r.kt)("h3",{id:"addcolors"},"addColors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addColors(string[3] _colors) external returns (uint256 id)\n")),(0,r.kt)("h3",{id:"generatesvghypercert-1"},"generateSvgHyperCert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateSvgHyperCert(string name, string[] scopesOfImpact, uint64[2] workTimeframe, uint64[2] impactTimeframe, uint256 totalUnits) external view virtual returns (string)\n")),(0,r.kt)("h3",{id:"generatesvgfraction-1"},"generateSvgFraction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateSvgFraction(string name, string[] scopesOfImpact, uint64[2] workTimeframe, uint64[2] impactTimeframe, uint256 units, uint256 totalUnits) external view virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatehypercert"},"_","generateHyperCert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateHyperCert(struct HyperCertSVG.SVGParams params) internal view virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatehypercertfraction"},"_","generateHyperCertFraction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateHyperCertFraction(struct HyperCertSVG.SVGParams params) internal view virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatebackgroundpattern"},"_","generateBackgroundPattern"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateBackgroundPattern(string primaryScopeOfImpact, struct HyperCertSVG.SVGColors colors) internal view returns (string background)\n")),(0,r.kt)("h3",{id:"_generatecolors"},"_","generateColors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateColors(string primaryScopeOfImpact) internal view returns (struct HyperCertSVG.SVGColors _colors)\n")),(0,r.kt)("h3",{id:"_getbackgroundindex"},"_","getBackgroundIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getBackgroundIndex(string primaryScopeOfImpact) internal pure returns (uint256 index)\n")),(0,r.kt)("h3",{id:"_getcolorindex"},"_","getColorIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getColorIndex(string primaryScopeOfImpact) internal view returns (uint256 index)\n")),(0,r.kt)("h3",{id:"_generateheader"},"_","generateHeader"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateHeader(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatescopeofimpact"},"_","generateScopeOfImpact"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateScopeOfImpact(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatename"},"_","generateName"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateName(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generateworkperiod"},"_","generateWorkperiod"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateWorkperiod(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatedivider"},"_","generateDivider"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateDivider(struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatefraction"},"_","generateFraction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateFraction(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal view virtual returns (string)\n")),(0,r.kt)("h3",{id:"stringtobytes32"},"stringToBytes32"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function stringToBytes32(string source) internal pure returns (bytes32 result)\n")),(0,r.kt)("h3",{id:"bytes32tostring"},"bytes32ToString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function bytes32ToString(bytes32 _bytes32, uint8 cutoff) internal pure returns (string parsedString)\n")),(0,r.kt)("h3",{id:"cutstring"},"cutString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function cutString(string source, uint8 cutoff) internal pure returns (string cutString)\n")),(0,r.kt)("h3",{id:"getpercent"},"getPercent"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPercent(uint256 part, uint256 whole) public pure returns (uint256 percent)\n")),(0,r.kt)("h3",{id:"uint2decimal"},"uint2decimal"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function uint2decimal(uint256 self, uint8 decimals) internal pure returns (bytes)\n")),(0,r.kt)("h3",{id:"supportsinterface-4"},"supportsInterface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view returns (bool)\n")),(0,r.kt)("p",null,"Returns a flag indicating if the contract supports the specified interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interfaceId"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the interface")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"true, if the interface is supported")))),(0,r.kt)("h3",{id:"_authorizeupgrade-2"},"_","authorizeUpgrade"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeUpgrade(address) internal view\n")),(0,r.kt)("p",null,"upgrade authorization logic"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"adds onlyRole(UPGRADER_ROLE) requirement")),(0,r.kt)("h2",{id:"ierc3525metadataupgradeable"},"IERC3525MetadataUpgradeable"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Interfaces for any contract that wants to support query of the Uniform Resource Identifier\n(URI) for the ERC3525 contract as well as a specified slot.\nBecause of the higher reliability of data stored in smart contracts compared to data stored in\ncentralized systems, it is recommended that metadata, including ",(0,r.kt)("inlineCode",{parentName:"em"},"contractURI"),", ",(0,r.kt)("inlineCode",{parentName:"em"},"slotURI")," and\n",(0,r.kt)("inlineCode",{parentName:"em"},"tokenURI"),", be directly returned in JSON format, instead of being returned with a url pointing\nto any resource stored in a centralized system.\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525"),"\nNote: the ERC-165 identifier for this interface is 0xe1600902.")),(0,r.kt)("h3",{id:"contracturi-2"},"contractURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function contractURI() external view returns (string)\n")),(0,r.kt)("p",null,"Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function SHOULD return the URI for this contract in JSON format, starting with\nheader ",(0,r.kt)("inlineCode",{parentName:"em"},"data:application/json;"),".\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525")," for the JSON schema for contract URI.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The JSON formatted URI of the current ERC3525 contract")))),(0,r.kt)("h3",{id:"sloturi-2"},"slotURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotURI(uint256 _slot) external view returns (string)\n")),(0,r.kt)("p",null,"Returns the Uniform Resource Identifier (URI) for the specified slot."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function SHOULD return the URI for ",(0,r.kt)("inlineCode",{parentName:"em"},"_slot")," in JSON format, starting with header\n",(0,r.kt)("inlineCode",{parentName:"em"},"data:application/json;"),".\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525")," for the JSON schema for slot URI.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The JSON formatted URI of ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"))))),(0,r.kt)("h2",{id:"ierc3525receiver"},"IERC3525Receiver"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Interface for any contract that wants to be informed by EIP-3525 contracts when receiving values from other\naddresses.\nNote: the EIP-165 identifier for this interface is 0x009ce20b.")),(0,r.kt)("h3",{id:"onerc3525received"},"onERC3525Received"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function onERC3525Received(address _operator, uint256 _fromTokenId, uint256 _toTokenId, uint256 _value, bytes _data) external returns (bytes4)\n")),(0,r.kt)("p",null,"Handle the receipt of an EIP-3525 token value."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"An EIP-3525 smart contract MUST check whether this function is implemented by the recipient contract, if the\nrecipient contract implements this function, the EIP-3525 contract MUST call this function after a\nvalue transfer (i.e. ",(0,r.kt)("inlineCode",{parentName:"em"},"transferFrom(uint256,uint256,uint256,bytes)"),").\nMUST return 0x009ce20b (i.e. ",(0,r.kt)("inlineCode",{parentName:"em"},"bytes4(keccak256('onERC3525Received(address,uint256,uint256, uint256,bytes)'))"),") if the transfer is accepted.\nMUST revert or return any value other than 0x009ce20b if the transfer is rejected.\nThe EIP-3525 smart contract that calls this function MUST revert the transfer transaction if the return value\nis not equal to 0x009ce20b.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","operator"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address which triggered the transfer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","fromTokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token id to transfer value from")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","toTokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token id to transfer value to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","value"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The transferred value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","data"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes"),(0,r.kt)("td",{parentName:"tr",align:null},"Additional data with no specified format")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bytes4(keccak256('onERC3525Received(address,uint256,uint256,uint256,bytes)'))")," unless the transfer is rejected.")))),(0,r.kt)("h2",{id:"ierc3525slotapprovableupgradeable"},"IERC3525SlotApprovableUpgradeable"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Interfaces for any contract that wants to support approval of slot level, which allows an\noperator to manage one's tokens with the same slot.\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525"),"\nNote: the EIP-165 identifier for this interface is 0xb688be58.")),(0,r.kt)("h3",{id:"approvalforslot"},"ApprovalForSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ApprovalForSlot(address _owner, uint256 _slot, address _operator, bool _approved)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"MUST emit when an operator is approved or disapproved to manage all of ",(0,r.kt)("inlineCode",{parentName:"em"},"_owner"),"'s\ntokens with the same slot.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","owner"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address whose tokens are approved")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","slot"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to approve, all of ",(0,r.kt)("inlineCode",{parentName:"td"},"_owner"),"'s tokens with this slot are approved")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","operator"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The operator being approved or disapproved")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","approved"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Identify if ",(0,r.kt)("inlineCode",{parentName:"td"},"_operator")," is approved or disapproved")))),(0,r.kt)("h3",{id:"setapprovalforslot"},"setApprovalForSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function setApprovalForSlot(address _owner, uint256 _slot, address _operator, bool _approved) external payable\n")),(0,r.kt)("p",null,"Approve or disapprove an operator to manage all of ",(0,r.kt)("inlineCode",{parentName:"p"},"_owner"),"'s tokens with the\nspecified slot."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Caller SHOULD be ",(0,r.kt)("inlineCode",{parentName:"em"},"_owner")," or an operator who has been authorized through\n",(0,r.kt)("inlineCode",{parentName:"em"},"setApprovalForAll"),".\nMUST emit ApprovalSlot event.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","owner"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address that owns the EIP-3525 tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","slot"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot of tokens being queried approval of")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","operator"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address for whom to query approval")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","approved"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Identify if ",(0,r.kt)("inlineCode",{parentName:"td"},"_operator")," would be approved or disapproved")))),(0,r.kt)("h3",{id:"isapprovedforslot"},"isApprovedForSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isApprovedForSlot(address _owner, uint256 _slot, address _operator) external view returns (bool)\n")),(0,r.kt)("p",null,"Query if ",(0,r.kt)("inlineCode",{parentName:"p"},"_operator")," is authorized to manage all of ",(0,r.kt)("inlineCode",{parentName:"p"},"_owner"),"'s tokens with the\nspecified slot."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","owner"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address that owns the EIP-3525 tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","slot"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot of tokens being queried approval of")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","operator"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address for whom to query approval")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"True if ",(0,r.kt)("inlineCode",{parentName:"td"},"_operator")," is authorized to manage all of ",(0,r.kt)("inlineCode",{parentName:"td"},"_owner"),"'s tokens with ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"),", false otherwise.")))),(0,r.kt)("h2",{id:"ierc3525slotenumerableupgradeable"},"IERC3525SlotEnumerableUpgradeable"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Interfaces for any contract that wants to support enumeration of slots as well as tokens\nwith the same slot.\nNote: the EIP-165 identifier for this interface is 0x3b741b9e.")),(0,r.kt)("h3",{id:"slotcount-1"},"slotCount"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotCount() external view returns (uint256)\n")),(0,r.kt)("p",null,"Get the total amount of slots stored by the contract."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount of slots")))),(0,r.kt)("h3",{id:"slotbyindex-1"},"slotByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotByIndex(uint256 _index) external view returns (uint256)\n")),(0,r.kt)("p",null,"Get the slot at the specified index of all slots stored by the contract."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","index"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The index in the slot list")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot at ",(0,r.kt)("inlineCode",{parentName:"td"},"index")," of all slots.")))),(0,r.kt)("h3",{id:"tokensupplyinslot-1"},"tokenSupplyInSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenSupplyInSlot(uint256 _slot) external view returns (uint256)\n")),(0,r.kt)("p",null,"Get the total amount of tokens with the same slot."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","slot"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to query token supply for")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount of tokens with the specified ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"))))),(0,r.kt)("h3",{id:"tokeninslotbyindex-1"},"tokenInSlotByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenInSlotByIndex(uint256 _slot, uint256 _index) external view returns (uint256)\n")),(0,r.kt)("p",null,"Get the token at the specified index of all tokens with the same slot."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","slot"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to query tokens with")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","index"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The index in the token list of the slot")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token ID at ",(0,r.kt)("inlineCode",{parentName:"td"},"_index")," of all tokens with ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"))))),(0,r.kt)("h2",{id:"ierc3525upgradeable"},"IERC3525Upgradeable"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"See ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525"))),(0,r.kt)("h3",{id:"transfervalue"},"TransferValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event TransferValue(uint256 _fromTokenId, uint256 _toTokenId, uint256 _value)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"MUST emit when value of a token is transferred to another token with the same slot,\nincluding zero value transfers (","_","value == 0) as well as transfers when tokens are created\n(",(0,r.kt)("inlineCode",{parentName:"em"},"_fromTokenId")," == 0) or destroyed (",(0,r.kt)("inlineCode",{parentName:"em"},"_toTokenId")," == 0).")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","fromTokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token id to transfer value from")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","toTokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token id to transfer value to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","value"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The transferred value")))),(0,r.kt)("h3",{id:"approvalvalue"},"ApprovalValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ApprovalValue(uint256 _tokenId, address _operator, uint256 _value)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"MUST emit when the approval value of a token is set or changed.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","tokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token to approve")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","operator"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The operator to approve for")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","value"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum value that ",(0,r.kt)("inlineCode",{parentName:"td"},"_operator")," is allowed to manage")))),(0,r.kt)("h3",{id:"slotchanged"},"SlotChanged"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event SlotChanged(uint256 _tokenId, uint256 _oldSlot, uint256 _newSlot)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"MUST emit when the slot of a token is set or changed.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","tokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token of which slot is set or changed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","oldSlot"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The previous slot of the token")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","newSlot"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The updated slot of the token")))),(0,r.kt)("h3",{id:"valuedecimals-1"},"valueDecimals"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function valueDecimals() external view returns (uint8)\n")),(0,r.kt)("p",null,"Get the number of decimals the token uses for value - e.g. 6, means the user\nrepresentation of the value of a token can be calculated by dividing it by 1,000,000.\nConsidering the compatibility with third-party wallets, this function is defined as\n",(0,r.kt)("inlineCode",{parentName:"p"},"valueDecimals()")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"decimals()")," to avoid conflict with EIP-20 tokens."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint8"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of decimals for value")))),(0,r.kt)("h3",{id:"balanceof-3"},"balanceOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(uint256 _tokenId) external view returns (uint256)\n")),(0,r.kt)("p",null,"Get the value of a token."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","tokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token for which to query the balance")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The value of ",(0,r.kt)("inlineCode",{parentName:"td"},"_tokenId"))))),(0,r.kt)("h3",{id:"slotof-1"},"slotOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotOf(uint256 _tokenId) external view returns (uint256)\n")),(0,r.kt)("p",null,"Get the slot of a token."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","tokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The identifier for a token")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot of the token")))),(0,r.kt)("h3",{id:"approve-2"},"approve"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(uint256 _tokenId, address _operator, uint256 _value) external payable\n")),(0,r.kt)("p",null,"Allow an operator to manage the value of a token, up to the ",(0,r.kt)("inlineCode",{parentName:"p"},"_value"),"."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"MUST revert unless caller is the current owner, an authorized operator, or the approved\naddress for ",(0,r.kt)("inlineCode",{parentName:"em"},"_tokenId"),".\nMUST emit the ApprovalValue event.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","tokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token to approve")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","operator"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The operator to be approved")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","value"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum value of ",(0,r.kt)("inlineCode",{parentName:"td"},"_toTokenId")," that ",(0,r.kt)("inlineCode",{parentName:"td"},"_operator")," is allowed to manage")))),(0,r.kt)("h3",{id:"allowance-1"},"allowance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function allowance(uint256 _tokenId, address _operator) external view returns (uint256)\n")),(0,r.kt)("p",null,"Get the maximum value of a token that an operator is allowed to manage."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","tokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token for which to query the allowance")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","operator"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of an operator")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The current approval value of ",(0,r.kt)("inlineCode",{parentName:"td"},"_tokenId")," that ",(0,r.kt)("inlineCode",{parentName:"td"},"_operator")," is allowed to manage")))),(0,r.kt)("h3",{id:"transferfrom-3"},"transferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(uint256 _fromTokenId, uint256 _toTokenId, uint256 _value) external payable\n")),(0,r.kt)("p",null,"Transfer value from a specified token to another specified token with the same slot."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Caller MUST be the current owner, an authorized operator or an operator who has been\napproved the whole ",(0,r.kt)("inlineCode",{parentName:"em"},"_fromTokenId")," or part of it.\nMUST revert if ",(0,r.kt)("inlineCode",{parentName:"em"},"_fromTokenId")," or ",(0,r.kt)("inlineCode",{parentName:"em"},"_toTokenId")," is zero token id or does not exist.\nMUST revert if slots of ",(0,r.kt)("inlineCode",{parentName:"em"},"_fromTokenId")," and ",(0,r.kt)("inlineCode",{parentName:"em"},"_toTokenId")," do not match.\nMUST revert if ",(0,r.kt)("inlineCode",{parentName:"em"},"_value")," exceeds the balance of ",(0,r.kt)("inlineCode",{parentName:"em"},"_fromTokenId")," or its allowance to the\noperator.\nMUST emit ",(0,r.kt)("inlineCode",{parentName:"em"},"TransferValue")," event.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","fromTokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token to transfer value from")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","toTokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token to transfer value to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","value"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The transferred value")))),(0,r.kt)("h3",{id:"transferfrom-4"},"transferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(uint256 _fromTokenId, address _to, uint256 _value) external payable returns (uint256)\n")),(0,r.kt)("p",null,"Transfer value from a specified token to an address. The caller should confirm that\n",(0,r.kt)("inlineCode",{parentName:"p"},"_to")," is capable of receiving EIP-3525 tokens."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function MUST create a new EIP-3525 token with the same slot for ",(0,r.kt)("inlineCode",{parentName:"em"},"_to"),",\nor find an existing token with the same slot owned by ",(0,r.kt)("inlineCode",{parentName:"em"},"_to"),", to receive the transferred value.\nMUST revert if ",(0,r.kt)("inlineCode",{parentName:"em"},"_fromTokenId")," is zero token id or does not exist.\nMUST revert if ",(0,r.kt)("inlineCode",{parentName:"em"},"_to")," is zero address.\nMUST revert if ",(0,r.kt)("inlineCode",{parentName:"em"},"_value")," exceeds the balance of ",(0,r.kt)("inlineCode",{parentName:"em"},"_fromTokenId")," or its allowance to the\noperator.\nMUST emit ",(0,r.kt)("inlineCode",{parentName:"em"},"Transfer")," and ",(0,r.kt)("inlineCode",{parentName:"em"},"TransferValue")," events.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","fromTokenId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token to transfer value from")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","to"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address to transfer value to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"_","value"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The transferred value")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of the token which receives the transferred value")))),(0,r.kt)("h2",{id:"ihypercertmetadata"},"IHyperCertMetadata"),(0,r.kt)("h3",{id:"generatecontracturi-1"},"generateContractURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateContractURI() external view returns (string)\n")),(0,r.kt)("h3",{id:"generatesloturi-1"},"generateSlotURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateSlotURI(uint256 slotId) external view returns (string)\n")),(0,r.kt)("h3",{id:"generatetokenuri-1"},"generateTokenURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateTokenURI(uint256 slotId, uint256 tokenId) external view returns (string)\n")),(0,r.kt)("h2",{id:"datetime"},"DateTime"),(0,r.kt)("h3",{id:"seconds_per_day"},"SECONDS_PER_DAY"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 SECONDS_PER_DAY\n")),(0,r.kt)("h3",{id:"seconds_per_hour"},"SECONDS_PER_HOUR"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 SECONDS_PER_HOUR\n")),(0,r.kt)("h3",{id:"seconds_per_minute"},"SECONDS_PER_MINUTE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 SECONDS_PER_MINUTE\n")),(0,r.kt)("h3",{id:"offset19700101"},"OFFSET19700101"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"int256 OFFSET19700101\n")),(0,r.kt)("h3",{id:"dow_mon"},"DOW_MON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DOW_MON\n")),(0,r.kt)("h3",{id:"dow_tue"},"DOW_TUE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DOW_TUE\n")),(0,r.kt)("h3",{id:"dow_wed"},"DOW_WED"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DOW_WED\n")),(0,r.kt)("h3",{id:"dow_thu"},"DOW_THU"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DOW_THU\n")),(0,r.kt)("h3",{id:"dow_fri"},"DOW_FRI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DOW_FRI\n")),(0,r.kt)("h3",{id:"dow_sat"},"DOW_SAT"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DOW_SAT\n")),(0,r.kt)("h3",{id:"dow_sun"},"DOW_SUN"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 DOW_SUN\n")),(0,r.kt)("h3",{id:"_daysfromdate"},"_","daysFromDate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _daysFromDate(uint256 year, uint256 month, uint256 day) internal pure returns (uint256 _days)\n")),(0,r.kt)("h3",{id:"_daystodate"},"_","daysToDate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _daysToDate(uint256 _days) internal pure returns (uint256 year, uint256 month, uint256 day)\n")),(0,r.kt)("h3",{id:"timestampfromdate"},"timestampFromDate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function timestampFromDate(uint256 year, uint256 month, uint256 day) internal pure returns (uint256 timestamp)\n")),(0,r.kt)("h3",{id:"timestampfromdatetime"},"timestampFromDateTime"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function timestampFromDateTime(uint256 year, uint256 month, uint256 day, uint256 hour, uint256 minute, uint256 second) internal pure returns (uint256 timestamp)\n")),(0,r.kt)("h3",{id:"timestamptodate"},"timestampToDate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function timestampToDate(uint256 timestamp) internal pure returns (uint256 year, uint256 month, uint256 day)\n")),(0,r.kt)("h3",{id:"timestamptodatetime"},"timestampToDateTime"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function timestampToDateTime(uint256 timestamp) internal pure returns (uint256 year, uint256 month, uint256 day, uint256 hour, uint256 minute, uint256 second)\n")),(0,r.kt)("h3",{id:"isvaliddate"},"isValidDate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isValidDate(uint256 year, uint256 month, uint256 day) internal pure returns (bool valid)\n")),(0,r.kt)("h3",{id:"isvaliddatetime"},"isValidDateTime"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isValidDateTime(uint256 year, uint256 month, uint256 day, uint256 hour, uint256 minute, uint256 second) internal pure returns (bool valid)\n")),(0,r.kt)("h3",{id:"isleapyear"},"isLeapYear"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isLeapYear(uint256 timestamp) internal pure returns (bool leapYear)\n")),(0,r.kt)("h3",{id:"_isleapyear"},"_","isLeapYear"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _isLeapYear(uint256 year) internal pure returns (bool leapYear)\n")),(0,r.kt)("h3",{id:"isweekday"},"isWeekDay"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isWeekDay(uint256 timestamp) internal pure returns (bool weekDay)\n")),(0,r.kt)("h3",{id:"isweekend"},"isWeekEnd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isWeekEnd(uint256 timestamp) internal pure returns (bool weekEnd)\n")),(0,r.kt)("h3",{id:"getdaysinmonth"},"getDaysInMonth"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDaysInMonth(uint256 timestamp) internal pure returns (uint256 daysInMonth)\n")),(0,r.kt)("h3",{id:"_getdaysinmonth"},"_","getDaysInMonth"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getDaysInMonth(uint256 year, uint256 month) internal pure returns (uint256 daysInMonth)\n")),(0,r.kt)("h3",{id:"getdayofweek"},"getDayOfWeek"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDayOfWeek(uint256 timestamp) internal pure returns (uint256 dayOfWeek)\n")),(0,r.kt)("h3",{id:"getyear"},"getYear"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getYear(uint256 timestamp) internal pure returns (uint256 year)\n")),(0,r.kt)("h3",{id:"getmonth"},"getMonth"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMonth(uint256 timestamp) internal pure returns (uint256 month)\n")),(0,r.kt)("h3",{id:"getday"},"getDay"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getDay(uint256 timestamp) internal pure returns (uint256 day)\n")),(0,r.kt)("h3",{id:"gethour"},"getHour"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getHour(uint256 timestamp) internal pure returns (uint256 hour)\n")),(0,r.kt)("h3",{id:"getminute"},"getMinute"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getMinute(uint256 timestamp) internal pure returns (uint256 minute)\n")),(0,r.kt)("h3",{id:"getsecond"},"getSecond"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getSecond(uint256 timestamp) internal pure returns (uint256 second)\n")),(0,r.kt)("h3",{id:"addyears"},"addYears"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addYears(uint256 timestamp, uint256 _years) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"addmonths"},"addMonths"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addMonths(uint256 timestamp, uint256 _months) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"adddays"},"addDays"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addDays(uint256 timestamp, uint256 _days) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"addhours"},"addHours"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addHours(uint256 timestamp, uint256 _hours) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"addminutes"},"addMinutes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addMinutes(uint256 timestamp, uint256 _minutes) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"addseconds"},"addSeconds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addSeconds(uint256 timestamp, uint256 _seconds) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"subyears"},"subYears"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function subYears(uint256 timestamp, uint256 _years) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"submonths"},"subMonths"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function subMonths(uint256 timestamp, uint256 _months) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"subdays"},"subDays"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function subDays(uint256 timestamp, uint256 _days) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"subhours"},"subHours"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function subHours(uint256 timestamp, uint256 _hours) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"subminutes"},"subMinutes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function subMinutes(uint256 timestamp, uint256 _minutes) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"subseconds"},"subSeconds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function subSeconds(uint256 timestamp, uint256 _seconds) internal pure returns (uint256 newTimestamp)\n")),(0,r.kt)("h3",{id:"diffyears"},"diffYears"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function diffYears(uint256 fromTimestamp, uint256 toTimestamp) internal pure returns (uint256 _years)\n")),(0,r.kt)("h3",{id:"diffmonths"},"diffMonths"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function diffMonths(uint256 fromTimestamp, uint256 toTimestamp) internal pure returns (uint256 _months)\n")),(0,r.kt)("h3",{id:"diffdays"},"diffDays"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function diffDays(uint256 fromTimestamp, uint256 toTimestamp) internal pure returns (uint256 _days)\n")),(0,r.kt)("h3",{id:"diffhours"},"diffHours"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function diffHours(uint256 fromTimestamp, uint256 toTimestamp) internal pure returns (uint256 _hours)\n")),(0,r.kt)("h3",{id:"diffminutes"},"diffMinutes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function diffMinutes(uint256 fromTimestamp, uint256 toTimestamp) internal pure returns (uint256 _minutes)\n")),(0,r.kt)("h3",{id:"diffseconds"},"diffSeconds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function diffSeconds(uint256 fromTimestamp, uint256 toTimestamp) internal pure returns (uint256 _seconds)\n")),(0,r.kt)("h2",{id:"strings"},"strings"),(0,r.kt)("h3",{id:"slice"},"slice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct slice {\n  uint256 _len;\n  uint256 _ptr;\n}\n\n")),(0,r.kt)("h3",{id:"memcpy"},"memcpy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function memcpy(uint256 dest, uint256 src, uint256 len) private pure\n")),(0,r.kt)("h3",{id:"toslice"},"toSlice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toSlice(string self) internal pure returns (struct strings.slice)\n")),(0,r.kt)("h3",{id:"len"},"len"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function len(bytes32 self) internal pure returns (uint256)\n")),(0,r.kt)("h3",{id:"tosliceb32"},"toSliceB32"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toSliceB32(bytes32 self) internal pure returns (struct strings.slice ret)\n")),(0,r.kt)("h3",{id:"copy"},"copy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function copy(struct strings.slice self) internal pure returns (struct strings.slice)\n")),(0,r.kt)("h3",{id:"tostring"},"toString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toString(struct strings.slice self) internal pure returns (string)\n")),(0,r.kt)("h3",{id:"len-1"},"len"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function len(struct strings.slice self) internal pure returns (uint256 l)\n")),(0,r.kt)("h3",{id:"empty"},"empty"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function empty(struct strings.slice self) internal pure returns (bool)\n")),(0,r.kt)("h3",{id:"compare"},"compare"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function compare(struct strings.slice self, struct strings.slice other) internal pure returns (int256)\n")),(0,r.kt)("h3",{id:"equals"},"equals"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function equals(struct strings.slice self, struct strings.slice other) internal pure returns (bool)\n")),(0,r.kt)("h3",{id:"nextrune"},"nextRune"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function nextRune(struct strings.slice self, struct strings.slice rune) internal pure returns (struct strings.slice)\n")),(0,r.kt)("h3",{id:"nextrune-1"},"nextRune"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function nextRune(struct strings.slice self) internal pure returns (struct strings.slice ret)\n")),(0,r.kt)("h3",{id:"ord"},"ord"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function ord(struct strings.slice self) internal pure returns (uint256 ret)\n")),(0,r.kt)("h3",{id:"keccak"},"keccak"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function keccak(struct strings.slice self) internal pure returns (bytes32 ret)\n")),(0,r.kt)("h3",{id:"startswith"},"startsWith"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function startsWith(struct strings.slice self, struct strings.slice needle) internal pure returns (bool)\n")),(0,r.kt)("h3",{id:"beyond"},"beyond"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function beyond(struct strings.slice self, struct strings.slice needle) internal pure returns (struct strings.slice)\n")),(0,r.kt)("h3",{id:"endswith"},"endsWith"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function endsWith(struct strings.slice self, struct strings.slice needle) internal pure returns (bool)\n")),(0,r.kt)("h3",{id:"until"},"until"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function until(struct strings.slice self, struct strings.slice needle) internal pure returns (struct strings.slice)\n")),(0,r.kt)("h3",{id:"findptr"},"findPtr"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function findPtr(uint256 selflen, uint256 selfptr, uint256 needlelen, uint256 needleptr) private pure returns (uint256)\n")),(0,r.kt)("h3",{id:"rfindptr"},"rfindPtr"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function rfindPtr(uint256 selflen, uint256 selfptr, uint256 needlelen, uint256 needleptr) private pure returns (uint256)\n")),(0,r.kt)("h3",{id:"find"},"find"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function find(struct strings.slice self, struct strings.slice needle) internal pure returns (struct strings.slice)\n")),(0,r.kt)("h3",{id:"rfind"},"rfind"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function rfind(struct strings.slice self, struct strings.slice needle) internal pure returns (struct strings.slice)\n")),(0,r.kt)("h3",{id:"split-1"},"split"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function split(struct strings.slice self, struct strings.slice needle, struct strings.slice token) internal pure returns (struct strings.slice)\n")),(0,r.kt)("h3",{id:"split-2"},"split"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function split(struct strings.slice self, struct strings.slice needle) internal pure returns (struct strings.slice token)\n")),(0,r.kt)("h3",{id:"rsplit"},"rsplit"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function rsplit(struct strings.slice self, struct strings.slice needle, struct strings.slice token) internal pure returns (struct strings.slice)\n")),(0,r.kt)("h3",{id:"rsplit-1"},"rsplit"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function rsplit(struct strings.slice self, struct strings.slice needle) internal pure returns (struct strings.slice token)\n")),(0,r.kt)("h3",{id:"count"},"count"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function count(struct strings.slice self, struct strings.slice needle) internal pure returns (uint256 cnt)\n")),(0,r.kt)("h3",{id:"contains"},"contains"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function contains(struct strings.slice self, struct strings.slice needle) internal pure returns (bool)\n")),(0,r.kt)("h3",{id:"concat"},"concat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function concat(struct strings.slice self, struct strings.slice other) internal pure returns (string)\n")),(0,r.kt)("h3",{id:"join"},"join"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function join(struct strings.slice self, struct strings.slice[] parts) internal pure returns (string)\n")),(0,r.kt)("h2",{id:"arraysupgradeable"},"ArraysUpgradeable"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Collection of functions related to array types.")),(0,r.kt)("h3",{id:"getsum"},"getSum"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getSum(uint64[] array) internal pure returns (uint256)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"calculate the sum of the elements of an array")),(0,r.kt)("h3",{id:"tostring-1"},"toString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toString(uint64[2] array) internal pure returns (string)\n")),(0,r.kt)("h3",{id:"tocsv"},"toCsv"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toCsv(uint256[] array) internal pure returns (string)\n")),(0,r.kt)("h3",{id:"tocsv-1"},"toCsv"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toCsv(string[] array) internal pure returns (string)\n")),(0,r.kt)("h2",{id:"stringsextensions"},"StringsExtensions"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Collection of functions related to array types.")),(0,r.kt)("h3",{id:"tostring-2"},"toString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toString(bool value) internal pure returns (string)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},'returns either "true" or "false"')),(0,r.kt)("h2",{id:"slotalreadyminted-1"},"SlotAlreadyMinted"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error SlotAlreadyMinted()\n")),(0,r.kt)("h2",{id:"slotoutofbounds-1"},"SlotOutOfBounds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error SlotOutOfBounds(uint256 slotId)\n")),(0,r.kt)("h2",{id:"slottokenoutofbounds-1"},"SlotTokenOutOfBounds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error SlotTokenOutOfBounds(uint256 slotId, uint256 tokenId)\n")),(0,r.kt)("h2",{id:"erc3525slotenumerableupgradeable-1"},"ERC3525SlotEnumerableUpgradeable"),(0,r.kt)("h3",{id:"slotdata-1"},"SlotData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct SlotData {\n  uint256 slot;\n  uint256[] slotTokens;\n}\n\n")),(0,r.kt)("h3",{id:"_slottokensindex-1"},"_","slotTokensIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => mapping(uint256 => uint256)) _slotTokensIndex\n")),(0,r.kt)("h3",{id:"_allslots-1"},"_","allSlots"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ERC3525SlotEnumerableUpgradeable.SlotData[] _allSlots\n")),(0,r.kt)("h3",{id:"_allslotsindex-1"},"_","allSlotsIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) _allSlotsIndex\n")),(0,r.kt)("h3",{id:"constructor-5"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,r.kt)("p",null,"Contract constructor logic"),(0,r.kt)("h3",{id:"__erc3525slotenumerableupgradeable_init-1"},"_","_","ERC3525SlotEnumerableUpgradeable_init"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function __ERC3525SlotEnumerableUpgradeable_init(string name, string symbol) public\n")),(0,r.kt)("p",null,"Contract initialization logic"),(0,r.kt)("h3",{id:"supportsinterface-5"},"supportsInterface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"slotcount-2"},"slotCount"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotCount() public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"Get the total amount of slots stored by the contract."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount of slots")))),(0,r.kt)("h3",{id:"slotbyindex-2"},"slotByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotByIndex(uint256 index_) public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"Get the slot at the specified index of all slots stored by the contract."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index","_"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The index in the slot list")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot at ",(0,r.kt)("inlineCode",{parentName:"td"},"index")," of all slots.")))),(0,r.kt)("h3",{id:"_slotexists-1"},"_","slotExists"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _slotExists(uint256 slot_) internal view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"tokensupplyinslot-2"},"tokenSupplyInSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenSupplyInSlot(uint256 slot_) public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"Get the total amount of tokens with the same slot."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"slot","_"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to query token supply for")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount of tokens with the specified ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"))))),(0,r.kt)("h3",{id:"tokeninslotbyindex-2"},"tokenInSlotByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenInSlotByIndex(uint256 slot_, uint256 index_) public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"Get the token at the specified index of all tokens with the same slot."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"slot","_"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to query tokens with")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"index","_"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The index in the token list of the slot")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The token ID at ",(0,r.kt)("inlineCode",{parentName:"td"},"_index")," of all tokens with ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"))))),(0,r.kt)("h3",{id:"_tokenexistsinslot-1"},"_","tokenExistsInSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _tokenExistsInSlot(uint256 slot_, uint256 tokenId_) private view returns (bool)\n")),(0,r.kt)("h3",{id:"_createslot-1"},"_","createSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _createSlot(uint256 slot_) internal virtual\n")),(0,r.kt)("h3",{id:"_beforevaluetransfer-2"},"_","beforeValueTransfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _beforeValueTransfer(address from_, address to_, uint256 fromTokenId_, uint256 toTokenId_, uint256 slot_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_aftervaluetransfer-2"},"_","afterValueTransfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _afterValueTransfer(address from_, address to_, uint256 fromTokenId_, uint256 toTokenId_, uint256 slot_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_addslottoallslotsenumeration-1"},"_","addSlotToAllSlotsEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _addSlotToAllSlotsEnumeration(struct ERC3525SlotEnumerableUpgradeable.SlotData slotData) private\n")),(0,r.kt)("h3",{id:"_addtokentoslotenumeration-1"},"_","addTokenToSlotEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _addTokenToSlotEnumeration(uint256 slot_, uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"_removetokenfromslotenumeration-1"},"_","removeTokenFromSlotEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _removeTokenFromSlotEnumeration(uint256 slot_, uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"__gap-1"},"_","_","gap"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256[47] __gap\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This empty reserved space is put in place to allow future versions to add new\nvariables without shifting down storage in the inheritance chain.")),(0,r.kt)("h2",{id:"nonexistenttoken-1"},"NonExistentToken"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NonExistentToken(uint256 tokenId)\n")),(0,r.kt)("h2",{id:"nonexistentslot-1"},"NonExistentSlot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NonExistentSlot(uint256 slotId)\n")),(0,r.kt)("h2",{id:"insufficientbalance-1"},"InsufficientBalance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InsufficientBalance(uint256 transferAmount, uint256 balance)\n")),(0,r.kt)("h2",{id:"insufficientallowance-1"},"InsufficientAllowance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InsufficientAllowance(uint256 transferAmount, uint256 allowance)\n")),(0,r.kt)("h2",{id:"tozeroaddress-1"},"ToZeroAddress"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error ToZeroAddress()\n")),(0,r.kt)("h2",{id:"invalidid-1"},"InvalidID"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidID(uint256 tokenId)\n")),(0,r.kt)("h2",{id:"alreadyminted-1"},"AlreadyMinted"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error AlreadyMinted(uint256 tokenId)\n")),(0,r.kt)("h2",{id:"slotsmismatch-1"},"SlotsMismatch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error SlotsMismatch(uint256 fromTokenId, uint256 toTokenId)\n")),(0,r.kt)("h2",{id:"invalidapproval-1"},"InvalidApproval"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidApproval(uint256 tokenId, address from, address to)\n")),(0,r.kt)("h2",{id:"notapprovedorowner-1"},"NotApprovedOrOwner"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NotApprovedOrOwner()\n")),(0,r.kt)("h2",{id:"noterc3525receiver-1"},"NotERC3525Receiver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NotERC3525Receiver(address receiver)\n")),(0,r.kt)("h2",{id:"noterc721receiver-1"},"NotERC721Receiver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error NotERC721Receiver(address receiver)\n")),(0,r.kt)("h2",{id:"fromincorrectowner-1"},"FromIncorrectOwner"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error FromIncorrectOwner()\n")),(0,r.kt)("h2",{id:"erc3525upgradeable-1"},"ERC3525Upgradeable"),(0,r.kt)("h3",{id:"tokendata-1"},"TokenData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TokenData {\n  uint256 id;\n  uint256 slot;\n  uint256 balance;\n  address owner;\n  address approved;\n  address[] valueApprovals;\n}\n\n")),(0,r.kt)("h3",{id:"addressdata-1"},"AddressData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct AddressData {\n  uint256[] ownedTokens;\n  mapping(uint256 => uint256) ownedTokensIndex;\n  mapping(address => bool) approvals;\n}\n\n")),(0,r.kt)("h3",{id:"_name-1"},"_","name"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"string _name\n")),(0,r.kt)("h3",{id:"_symbol-1"},"_","symbol"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"string _symbol\n")),(0,r.kt)("h3",{id:"_decimals-1"},"_","decimals"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"string _decimals\n")),(0,r.kt)("h3",{id:"_approvedvalues-1"},"_","approvedValues"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => mapping(address => uint256)) _approvedValues\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"tokenId => operator => units")),(0,r.kt)("h3",{id:"_alltokens-1"},"_","allTokens"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ERC3525Upgradeable.TokenData[] _allTokens\n")),(0,r.kt)("h3",{id:"_alltokensindex-1"},"_","allTokensIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => uint256) _allTokensIndex\n")),(0,r.kt)("h3",{id:"_addressdata-1"},"_","addressData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => struct ERC3525Upgradeable.AddressData) _addressData\n")),(0,r.kt)("h3",{id:"tokencounter-1"},"tokenCounter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 tokenCounter\n")),(0,r.kt)("h3",{id:"supportsinterface-6"},"supportsInterface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"constructor-6"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,r.kt)("p",null,"Contract constructor logic"),(0,r.kt)("h3",{id:"__erc3525upgradeable_init-1"},"_","_","ERC3525Upgradeable_init"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function __ERC3525Upgradeable_init(string name_, string symbol_) public\n")),(0,r.kt)("p",null,"Contract initialization logic"),(0,r.kt)("h3",{id:"name-1"},"name"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function name() public view virtual returns (string)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Returns the token collection name.")),(0,r.kt)("h3",{id:"symbol-1"},"symbol"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function symbol() public view virtual returns (string)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Returns the token collection symbol.")),(0,r.kt)("h3",{id:"balanceof-4"},"balanceOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(uint256 tokenId_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"balanceof-5"},"balanceOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(address owner_) public view virtual returns (uint256 balance)\n")),(0,r.kt)("h3",{id:"ownerof-1"},"ownerOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownerOf(uint256 tokenId_) public view virtual returns (address owner_)\n")),(0,r.kt)("h3",{id:"slotof-2"},"slotOf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotOf(uint256 tokenId_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"allowance-2"},"allowance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function allowance(uint256 tokenId_, address operator_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"totalsupply-1"},"totalSupply"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function totalSupply() public view virtual returns (uint256)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Returns the total amount of tokens stored by the contract.")),(0,r.kt)("h3",{id:"tokenbyindex-1"},"tokenByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenByIndex(uint256 index_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"tokenofownerbyindex-1"},"tokenOfOwnerByIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenOfOwnerByIndex(address owner_, uint256 index_) public view virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"_isapprovedorowner-1"},"_","isApprovedOrOwner"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _isApprovedOrOwner(address operator_, uint256 tokenId_) internal view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"_exists-1"},"_","exists"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _exists(uint256 tokenId_) internal view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"approve-3"},"approve"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(uint256 tokenId_, address to_, uint256 value_) external payable virtual\n")),(0,r.kt)("h3",{id:"approve-4"},"approve"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(address to_, uint256 tokenId_) public virtual\n")),(0,r.kt)("h3",{id:"getapproved-1"},"getApproved"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getApproved(uint256 tokenId_) public view virtual returns (address)\n")),(0,r.kt)("h3",{id:"setapprovalforall-1"},"setApprovalForAll"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function setApprovalForAll(address operator_, bool approved_) public virtual\n")),(0,r.kt)("h3",{id:"isapprovedforall-1"},"isApprovedForAll"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isApprovedForAll(address owner_, address operator_) public view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"transferfrom-5"},"transferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(uint256 fromTokenId_, address to_, uint256 value_) public payable virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"transferfrom-6"},"transferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(uint256 fromTokenId_, uint256 toTokenId_, uint256 value_) public payable virtual\n")),(0,r.kt)("h3",{id:"transferfrom-7"},"transferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(address from_, address to_, uint256 tokenId_) public virtual\n")),(0,r.kt)("h3",{id:"safetransferfrom-2"},"safeTransferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeTransferFrom(address from_, address to_, uint256 tokenId_, bytes data_) public virtual\n")),(0,r.kt)("h3",{id:"safetransferfrom-3"},"safeTransferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function safeTransferFrom(address from_, address to_, uint256 tokenId_) public virtual\n")),(0,r.kt)("h3",{id:"contracturi-3"},"contractURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function contractURI() public view virtual returns (string)\n")),(0,r.kt)("p",null,"Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function SHOULD return the URI for this contract in JSON format, starting with\nheader ",(0,r.kt)("inlineCode",{parentName:"em"},"data:application/json;"),".\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525")," for the JSON schema for contract URI.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The JSON formatted URI of the current ERC3525 contract")))),(0,r.kt)("h3",{id:"_mint-1"},"_","mint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mint(address to_, uint256 tokenId_, uint256 slot_) internal\n")),(0,r.kt)("h3",{id:"_mintvalue-1"},"_","mintValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mintValue(address to_, uint256 slot_, uint256 value_) internal virtual returns (uint256 tokenId)\n")),(0,r.kt)("h3",{id:"_splitvalue-1"},"_","splitValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _splitValue(uint256 fromToken_, uint256 value_) internal virtual returns (uint256 tokenId)\n")),(0,r.kt)("h3",{id:"_mergevalue-1"},"_","mergeValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mergeValue(uint256 fromToken_, uint256 toToken_) internal virtual returns (uint256 tokenId)\n")),(0,r.kt)("h3",{id:"_burn-1"},"_","burn"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _burn(uint256 tokenId_) internal virtual\n")),(0,r.kt)("h3",{id:"_approve-1"},"_","approve"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _approve(address to_, uint256 tokenId_) internal virtual\n")),(0,r.kt)("h3",{id:"_approvevalue-1"},"_","approveValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _approveValue(uint256 tokenId_, address to_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_spendallowance-1"},"_","spendAllowance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _spendAllowance(address operator_, uint256 tokenId_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_clearapprovedvalues-1"},"_","clearApprovedValues"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _clearApprovedValues(uint256 tokenId_) internal virtual\n")),(0,r.kt)("h3",{id:"_existapprovevalue-1"},"_","existApproveValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _existApproveValue(address to_, uint256 tokenId_) internal view virtual returns (bool)\n")),(0,r.kt)("h3",{id:"_setapprovalforall-1"},"_","setApprovalForAll"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setApprovalForAll(address owner_, address operator_, bool approved_) internal virtual\n")),(0,r.kt)("h3",{id:"_transfervalue-1"},"_","transferValue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferValue(uint256 fromTokenId_, uint256 toTokenId_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_transfertokenid-1"},"_","transferTokenId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _transferTokenId(address from_, address to_, uint256 tokenId_) internal virtual\n")),(0,r.kt)("h3",{id:"_safetransfertokenid-1"},"_","safeTransferTokenId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _safeTransferTokenId(address from_, address to_, uint256 tokenId_, bytes data_) internal virtual\n")),(0,r.kt)("h3",{id:"_beforevaluetransfer-3"},"_","beforeValueTransfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _beforeValueTransfer(address from_, address to_, uint256 fromTokenId_, uint256 toTokenId_, uint256 slot_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_aftervaluetransfer-3"},"_","afterValueTransfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _afterValueTransfer(address from_, address to_, uint256 fromTokenId_, uint256 toTokenId_, uint256 slot_, uint256 value_) internal virtual\n")),(0,r.kt)("h3",{id:"_checkonerc3525received-1"},"_","checkOnERC3525Received"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _checkOnERC3525Received(uint256 fromTokenId_, uint256 toTokenId_, uint256 value_, bytes data_) private returns (bool)\n")),(0,r.kt)("h3",{id:"_checkonerc721received-1"},"_","checkOnERC721Received"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _checkOnERC721Received(address from_, address to_, uint256 tokenId_, bytes data_) private returns (bool)\n")),(0,r.kt)("h3",{id:"_createoriginaltokenid-1"},"_","createOriginalTokenId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _createOriginalTokenId() internal virtual returns (uint256)\n")),(0,r.kt)("h3",{id:"_addtokentoownerenumeration-1"},"_","addTokenToOwnerEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _addTokenToOwnerEnumeration(address to_, uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"_removetokenfromownerenumeration-1"},"_","removeTokenFromOwnerEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _removeTokenFromOwnerEnumeration(address from_, uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"_addtokentoalltokensenumeration-1"},"_","addTokenToAllTokensEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _addTokenToAllTokensEnumeration(struct ERC3525Upgradeable.TokenData tokenData_) private\n")),(0,r.kt)("h3",{id:"_removetokenfromalltokensenumeration-1"},"_","removeTokenFromAllTokensEnumeration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _removeTokenFromAllTokensEnumeration(uint256 tokenId_) private\n")),(0,r.kt)("h3",{id:"_msgsender-2"},"_","msgSender"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _msgSender() internal view virtual returns (address sender)\n")),(0,r.kt)("h3",{id:"valuedecimals-2"},"valueDecimals"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function valueDecimals() external view virtual returns (uint8)\n")),(0,r.kt)("p",null,"Get the number of decimals the token uses for value - e.g. 6, means the user\nrepresentation of the value of a token can be calculated by dividing it by 1,000,000.\nConsidering the compatibility with third-party wallets, this function is defined as\n",(0,r.kt)("inlineCode",{parentName:"p"},"valueDecimals()")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"decimals()")," to avoid conflict with EIP-20 tokens."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint8"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of decimals for value")))),(0,r.kt)("h3",{id:"tokenuri-2"},"tokenURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenURI(uint256 tokenId) external view virtual returns (string)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Returns the Uniform Resource Identifier (URI) for ",(0,r.kt)("inlineCode",{parentName:"em"},"tokenId")," token.")),(0,r.kt)("h3",{id:"sloturi-3"},"slotURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotURI(uint256 _slot) external view virtual returns (string)\n")),(0,r.kt)("p",null,"Returns the Uniform Resource Identifier (URI) for the specified slot."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function SHOULD return the URI for ",(0,r.kt)("inlineCode",{parentName:"em"},"_slot")," in JSON format, starting with header\n",(0,r.kt)("inlineCode",{parentName:"em"},"data:application/json;"),".\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525")," for the JSON schema for slot URI.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The JSON formatted URI of ",(0,r.kt)("inlineCode",{parentName:"td"},"_slot"))))),(0,r.kt)("h2",{id:"ihypercertminter-1"},"IHyperCertMinter"),(0,r.kt)("h2",{id:"ihypercertsvg-1"},"IHyperCertSVG"),(0,r.kt)("h2",{id:"hypercertmetadata-1"},"HyperCertMetadata"),(0,r.kt)("h2",{id:"emptyinput-1"},"EmptyInput"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error EmptyInput()\n")),(0,r.kt)("h2",{id:"duplicatescope-1"},"DuplicateScope"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error DuplicateScope()\n")),(0,r.kt)("h2",{id:"invalidscope-1"},"InvalidScope"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidScope()\n")),(0,r.kt)("h2",{id:"invalidtimeframe-1"},"InvalidTimeframe"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidTimeframe(uint64 from, uint64 to)\n")),(0,r.kt)("h2",{id:"conflictingclaim-1"},"ConflictingClaim"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error ConflictingClaim()\n")),(0,r.kt)("h2",{id:"invalidinput-1"},"InvalidInput"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidInput()\n")),(0,r.kt)("h2",{id:"hypercertminter-1"},"HyperCertMinter"),(0,r.kt)("p",null,"Contains functions and events to initialize and issue a hypercertificate"),(0,r.kt)("h3",{id:"upgrader_role-3"},"UPGRADER_ROLE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 UPGRADER_ROLE\n")),(0,r.kt)("p",null,"User role required in order to upgrade the contract"),(0,r.kt)("h3",{id:"_metadata-1"},"_","metadata"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"contract IHyperCertMetadata _metadata\n")),(0,r.kt)("p",null,"Hypercert metadata contract"),(0,r.kt)("h3",{id:"workscopes-2"},"workScopes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => string) workScopes\n")),(0,r.kt)("p",null,"Mapping of id's to work-scopes"),(0,r.kt)("h3",{id:"impactscopes-2"},"impactScopes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => string) impactScopes\n")),(0,r.kt)("p",null,"Mapping of id's to impact-scopes"),(0,r.kt)("h3",{id:"rights-2"},"rights"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => string) rights\n")),(0,r.kt)("p",null,"Mapping of id's to rights"),(0,r.kt)("h3",{id:"_contributorimpacts-1"},"_","contributorImpacts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => mapping(bytes32 => bool)) _contributorImpacts\n")),(0,r.kt)("h3",{id:"_hypercerts-1"},"_","hyperCerts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct HyperCertMinter.Claim) _hyperCerts\n")),(0,r.kt)("h3",{id:"claim-2"},"Claim"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Claim {\n  bytes32 claimHash;\n  uint64[2] workTimeframe;\n  uint64[2] impactTimeframe;\n  bytes32[] workScopes;\n  bytes32[] impactScopes;\n  bytes32[] rights;\n  address[] contributors;\n  uint256 totalUnits;\n  uint16 version;\n  bool exists;\n  string name;\n  string description;\n  string uri;\n  address minter;\n}\n\n")),(0,r.kt)("h3",{id:"impactclaimed-1"},"ImpactClaimed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ImpactClaimed(uint256 id, address minter, uint64[] fractions)\n")),(0,r.kt)("p",null,"Emitted when an impact is claimed."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the claimed impact.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minter"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of cert minter.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fractions"),(0,r.kt)("td",{parentName:"tr",align:null},"uint64[]"),(0,r.kt)("td",{parentName:"tr",align:null},"Units of tokens issued under the hypercert.")))),(0,r.kt)("h3",{id:"impactscopeadded-1"},"ImpactScopeAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ImpactScopeAdded(bytes32 id, string text)\n")),(0,r.kt)("p",null,"Emitted when a new impact scope is added."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the impact scope.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Short text code of the impact scope.")))),(0,r.kt)("h3",{id:"rightadded-1"},"RightAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event RightAdded(bytes32 id, string text)\n")),(0,r.kt)("p",null,"Emitted when a new right is added."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the right.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Short text code of the right.")))),(0,r.kt)("h3",{id:"workscopeadded-1"},"WorkScopeAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event WorkScopeAdded(bytes32 id, string text)\n")),(0,r.kt)("p",null,"Emitted when a new work scope is added."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the work scope.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Short text code of the work scope.")))),(0,r.kt)("h3",{id:"constructor-7"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,r.kt)("p",null,"Contract constructor logic"),(0,r.kt)("h3",{id:"initialize-3"},"initialize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address metadataAddress) public\n")),(0,r.kt)("p",null,"Contract initialization logic"),(0,r.kt)("h3",{id:"addimpactscope-1"},"addImpactScope"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addImpactScope(string text) public\n")),(0,r.kt)("p",null,"Adds a new impact scope"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Text representing the impact scope")))),(0,r.kt)("h3",{id:"addright-1"},"addRight"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addRight(string text) public\n")),(0,r.kt)("p",null,"Adds a new right"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Text representing the right")))),(0,r.kt)("h3",{id:"addworkscope-1"},"addWorkScope"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addWorkScope(string text) public\n")),(0,r.kt)("p",null,"Adds a new work scope"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Text representing the work scope")))),(0,r.kt)("h3",{id:"mint-1"},"mint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address account, bytes data) public virtual\n")),(0,r.kt)("p",null,"Issues a new hypercertificate"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"account"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Account issuing the new hypercertificate")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes"),(0,r.kt)("td",{parentName:"tr",align:null},"Data representing the parameters of the claim")))),(0,r.kt)("h3",{id:"split-3"},"split"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function split(uint256 tokenId, uint256[] amounts) public\n")),(0,r.kt)("h3",{id:"merge-1"},"merge"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function merge(uint256[] tokenIds) public\n")),(0,r.kt)("h3",{id:"getimpactcert-2"},"getImpactCert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getImpactCert(uint256 claimID) public view returns (struct HyperCertMinter.Claim)\n")),(0,r.kt)("p",null,"Gets the impact claim with the specified id"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"claimID"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the claim")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"struct HyperCertMinter.Claim"),(0,r.kt)("td",{parentName:"tr",align:null},"The claim, if it doesn't exist with default values")))),(0,r.kt)("h3",{id:"supportsinterface-7"},"supportsInterface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view returns (bool)\n")),(0,r.kt)("p",null,"Returns a flag indicating if the contract supports the specified interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interfaceId"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the interface")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"true, if the interface is supported")))),(0,r.kt)("h3",{id:"sloturi-4"},"slotURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function slotURI(uint256 slotId_) external view returns (string)\n")),(0,r.kt)("h3",{id:"tokenuri-3"},"tokenURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenURI(uint256 tokenId_) public view returns (string)\n")),(0,r.kt)("h3",{id:"contracturi-4"},"contractURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function contractURI() public view returns (string)\n")),(0,r.kt)("p",null,"Returns the Uniform Resource Identifier (URI) for the current ERC3525 contract."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function SHOULD return the URI for this contract in JSON format, starting with\nheader ",(0,r.kt)("inlineCode",{parentName:"em"},"data:application/json;"),".\nSee ",(0,r.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-3525"},"https://eips.ethereum.org/EIPS/eip-3525")," for the JSON schema for contract URI.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The JSON formatted URI of the current ERC3525 contract")))),(0,r.kt)("h3",{id:"burn-1"},"burn"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function burn(uint256 tokenId_) public\n")),(0,r.kt)("h3",{id:"donate-1"},"donate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function donate(uint256 tokenId_) public\n")),(0,r.kt)("h3",{id:"_authorizeupgrade-3"},"_","authorizeUpgrade"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeUpgrade(address) internal view\n")),(0,r.kt)("p",null,"upgrade authorization logic"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"adds onlyRole(UPGRADER_ROLE) requirement")),(0,r.kt)("h3",{id:"_authorizeadd-1"},"_","authorizeAdd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeAdd(string text, mapping(bytes32 => string) map) internal view virtual returns (bytes32 id)\n")),(0,r.kt)("p",null,"Pre-add validation checks"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Text to be added")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"map"),(0,r.kt)("td",{parentName:"tr",align:null},"mapping(bytes32 ","=",">"," string)"),(0,r.kt)("td",{parentName:"tr",align:null},"Storage mapping that will be appended")))),(0,r.kt)("h3",{id:"_authorizemint-1"},"_","authorizeMint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeMint(address account, struct HyperCertMinter.Claim claim) internal view virtual\n")),(0,r.kt)("p",null,"Pre-mint validation checks"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"account"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Destination address for the mint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"claim"),(0,r.kt)("td",{parentName:"tr",align:null},"struct HyperCertMinter.Claim"),(0,r.kt)("td",{parentName:"tr",align:null},"Impact claim data")))),(0,r.kt)("h3",{id:"_parsedata-1"},"_","parseData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _parseData(bytes data) internal pure returns (struct HyperCertMinter.Claim claim, uint64[])\n")),(0,r.kt)("p",null,"Parse bytes to Claim and URI"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This function is overridable in order to support future schema changes")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes"),(0,r.kt)("td",{parentName:"tr",align:null},"Byte data representing the claim")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"claim"),(0,r.kt)("td",{parentName:"tr",align:null},"struct HyperCertMinter.Claim"),(0,r.kt)("td",{parentName:"tr",align:null},"The parsed Claim struct")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[1]"),(0,r.kt)("td",{parentName:"tr",align:null},"uint64[]"),(0,r.kt)("td",{parentName:"tr",align:null},"Claim metadata URI")))),(0,r.kt)("h3",{id:"_storecontributorsclaims"},"_","storeContributorsClaims"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _storeContributorsClaims(bytes32 claimHash, address[] creators) internal\n")),(0,r.kt)("p",null,"Stores contributor claims in the ",(0,r.kt)("inlineCode",{parentName:"p"},"contributorImpacts")," mapping; guards against overlapping claims"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"claimHash"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"Claim data hash-code value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"creators"),(0,r.kt)("td",{parentName:"tr",align:null},"address[]"),(0,r.kt)("td",{parentName:"tr",align:null},"Array of addresses for contributors")))),(0,r.kt)("h3",{id:"_haskey"},"_","hasKey"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _hasKey(mapping(bytes32 => string) map, bytes32 key) internal view returns (bool)\n")),(0,r.kt)("p",null,"Checks whether the supplied mapping contains the supplied key"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"map"),(0,r.kt)("td",{parentName:"tr",align:null},"mapping(bytes32 ","=",">"," string)"),(0,r.kt)("td",{parentName:"tr",align:null},"mapping to search")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,r.kt)("td",{parentName:"tr",align:null},"key to search")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"true, if the key exists in the mapping")))),(0,r.kt)("h3",{id:"_msgsender-3"},"_","msgSender"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _msgSender() internal view returns (address sender)\n")),(0,r.kt)("h3",{id:"setmetadatagenerator-1"},"setMetadataGenerator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMetadataGenerator(address metadataGenerator) external\n")),(0,r.kt)("h2",{id:"hypercertsvg-1"},"HyperCertSVG"),(0,r.kt)("h3",{id:"upgrader_role-4"},"UPGRADER_ROLE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 UPGRADER_ROLE\n")),(0,r.kt)("p",null,"User role required in order to upgrade the contract"),(0,r.kt)("h3",{id:"_version-2"},"_","version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint16 _version\n")),(0,r.kt)("p",null,"Current version of the contract"),(0,r.kt)("h3",{id:"backgrounds-1"},"backgrounds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => string) backgrounds\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"id => background")),(0,r.kt)("h3",{id:"colors-1"},"colors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct HyperCertSVG.SVGColors) colors\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"id => colors")),(0,r.kt)("h3",{id:"backgroundcounter-1"},"backgroundCounter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 backgroundCounter\n")),(0,r.kt)("h3",{id:"colorscounter-1"},"colorsCounter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 colorsCounter\n")),(0,r.kt)("h3",{id:"svgparams-1"},"SVGParams"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct SVGParams {\n  string name;\n  string[] scopesOfImpact;\n  uint64[2] workTimeframe;\n  uint64[2] impactTimeframe;\n  uint256 units;\n  uint256 totalUnits;\n}\n\n")),(0,r.kt)("h3",{id:"svgcolors-1"},"SVGColors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct SVGColors {\n  string primary;\n  string labels;\n  string background;\n}\n\n")),(0,r.kt)("h3",{id:"backgroundadded-1"},"BackgroundAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event BackgroundAdded(uint256 id)\n")),(0,r.kt)("h3",{id:"colorsadded-1"},"ColorsAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ColorsAdded(uint256 id, struct HyperCertSVG.SVGColors colors)\n")),(0,r.kt)("h3",{id:"constructor-8"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public\n")),(0,r.kt)("p",null,"Contract constructor logic"),(0,r.kt)("h3",{id:"initialize-4"},"initialize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize() public\n")),(0,r.kt)("p",null,"Contract initialization logic"),(0,r.kt)("h3",{id:"addbackground-1"},"addBackground"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addBackground(string svgString) external returns (uint256 id)\n")),(0,r.kt)("h3",{id:"addcolors-1"},"addColors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function addColors(string[3] _colors) external returns (uint256 id)\n")),(0,r.kt)("h3",{id:"generatesvghypercert-2"},"generateSvgHyperCert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateSvgHyperCert(string name, string[] scopesOfImpact, uint64[2] workTimeframe, uint64[2] impactTimeframe, uint256 totalUnits) external view virtual returns (string)\n")),(0,r.kt)("h3",{id:"generatesvgfraction-2"},"generateSvgFraction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function generateSvgFraction(string name, string[] scopesOfImpact, uint64[2] workTimeframe, uint64[2] impactTimeframe, uint256 units, uint256 totalUnits) external view virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatehypercert-1"},"_","generateHyperCert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateHyperCert(struct HyperCertSVG.SVGParams params) internal view virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatehypercertfraction-1"},"_","generateHyperCertFraction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateHyperCertFraction(struct HyperCertSVG.SVGParams params) internal view virtual returns (string)\n")),(0,r.kt)("p",null,"1: Primary\n2: Labels\n3: Backgrounds"),(0,r.kt)("h3",{id:"_generatebackgroundpattern-1"},"_","generateBackgroundPattern"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateBackgroundPattern(string primaryScopeOfImpact, struct HyperCertSVG.SVGColors colors) internal view returns (string background)\n")),(0,r.kt)("h3",{id:"_generatecolors-1"},"_","generateColors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateColors(string primaryScopeOfImpact) internal view returns (struct HyperCertSVG.SVGColors _colors)\n")),(0,r.kt)("h3",{id:"_getbackgroundindex-1"},"_","getBackgroundIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getBackgroundIndex(string primaryScopeOfImpact) internal pure returns (uint256 index)\n")),(0,r.kt)("h3",{id:"_getcolorindex-1"},"_","getColorIndex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getColorIndex(string primaryScopeOfImpact) internal view returns (uint256 index)\n")),(0,r.kt)("h3",{id:"_generateheader-1"},"_","generateHeader"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateHeader(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatescopeofimpact-1"},"_","generateScopeOfImpact"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateScopeOfImpact(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatename-1"},"_","generateName"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateName(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generateworkperiod-1"},"_","generateWorkperiod"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateWorkperiod(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatedivider-1"},"_","generateDivider"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateDivider(struct HyperCertSVG.SVGColors colors) internal pure virtual returns (string)\n")),(0,r.kt)("h3",{id:"_generatefraction-1"},"_","generateFraction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _generateFraction(struct HyperCertSVG.SVGParams params, struct HyperCertSVG.SVGColors colors) internal view virtual returns (string)\n")),(0,r.kt)("h3",{id:"stringtobytes32-1"},"stringToBytes32"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function stringToBytes32(string source) internal pure returns (bytes32 result)\n")),(0,r.kt)("h3",{id:"bytes32tostring-1"},"bytes32ToString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function bytes32ToString(bytes32 _bytes32, uint8 cutoff) internal pure returns (string parsedString)\n")),(0,r.kt)("h3",{id:"cutstring-1"},"cutString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function cutString(string source, uint8 cutoff) internal pure returns (string cutString)\n")),(0,r.kt)("h3",{id:"getpercent-1"},"getPercent"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPercent(uint256 part, uint256 whole) public pure returns (uint256 percent)\n")),(0,r.kt)("h3",{id:"uint2decimal-1"},"uint2decimal"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function uint2decimal(uint256 self, uint8 decimals) internal pure returns (bytes)\n")),(0,r.kt)("h3",{id:"version-1"},"version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function version() public view virtual returns (uint256)\n")),(0,r.kt)("p",null,"gets the current version of the contract"),(0,r.kt)("h3",{id:"updateversion-1"},"updateVersion"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateVersion() external\n")),(0,r.kt)("p",null,"Update the contract version number\nOnly allowed for member of UPGRADER_ROLE"),(0,r.kt)("h3",{id:"supportsinterface-8"},"supportsInterface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function supportsInterface(bytes4 interfaceId) public view returns (bool)\n")),(0,r.kt)("p",null,"Returns a flag indicating if the contract supports the specified interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interfaceId"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the interface")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"true, if the interface is supported")))),(0,r.kt)("h3",{id:"_authorizeupgrade-4"},"_","authorizeUpgrade"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeUpgrade(address) internal view\n")),(0,r.kt)("p",null,"upgrade authorization logic"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"adds onlyRole(UPGRADER_ROLE) requirement")),(0,r.kt)("h2",{id:"ierc3525metadataupgradeable-1"},"IERC3525MetadataUpgradeable"),(0,r.kt)("h2",{id:"ierc3525receiver-1"},"IERC3525Receiver"),(0,r.kt)("h2",{id:"ierc3525slotapprovableupgradeable-1"},"IERC3525SlotApprovableUpgradeable"),(0,r.kt)("h2",{id:"ierc3525slotenumerableupgradeable-1"},"IERC3525SlotEnumerableUpgradeable"),(0,r.kt)("h2",{id:"ierc3525upgradeable-1"},"IERC3525Upgradeable"),(0,r.kt)("h2",{id:"ihypercertmetadata-1"},"IHyperCertMetadata"),(0,r.kt)("h2",{id:"datetime-1"},"DateTime"),(0,r.kt)("h2",{id:"strings-1"},"strings"),(0,r.kt)("h2",{id:"arraysupgradeable-1"},"ArraysUpgradeable"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Collection of functions related to array types.")),(0,r.kt)("h3",{id:"getsum-1"},"getSum"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getSum(uint64[] array) internal pure returns (uint64)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"calculate the sum of the elements of an array")),(0,r.kt)("h3",{id:"tostring-3"},"toString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toString(uint64[2] array) internal pure returns (string)\n")),(0,r.kt)("h3",{id:"tocsv-2"},"toCsv"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toCsv(uint256[] array) internal pure returns (string)\n")),(0,r.kt)("h3",{id:"tocsv-3"},"toCsv"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toCsv(string[] array) internal pure returns (string)\n")),(0,r.kt)("h2",{id:"stringsextensions-1"},"StringsExtensions"))}p.isMDXComponent=!0}}]);